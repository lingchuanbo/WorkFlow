function mAsO(cmd) {
    if (cmd == undefined) {
        cmd = "l"
    }
    var strScriptName = "Dynamic Comp";
    var strScriptVersion = "2";
    var strTrialUrl = "http://aescripts.com/bao-dynamic-comp/";
    var privateNum = 500812;
    var supportEmail = "http://aescripts.com/contact";
    var trialLengthDays = 700000;
    var trialLengthLaunches = 70000;
    var offerUpgrade = false;
    var paidUpgrade = false;
    var retrieveUrl = "https://aescripts.com/downloadable/customer/products/";
    var exchangeUrl = "https://license.aescripts.com/exchange";
    var betaMode = false;
    var betaExpiration = new Date(2015, 11, 13);
    if ($.os.indexOf("Mac") != -1) {
        var macBase64KeyStr = "Îúíþ\x07\0\0\0\0\0\0\0\0\0\0\0\0È\0\0\0\0\08\0\0\0__PAGEZERO\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0__TEXT\0\0\0\0\0\0\0\0\0\0\0\0\0\0P\0\0\0\0\0\0\0P\0\0\x07\0\0\0\0\0\0\x07\0\0\0\0\0\0\0__text\0\0\0\0\0\0\0\0\0\0__TEXT\0\0\0\0\0\0\0\0\0\0P%\0\0'\0\0P\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0__symbol_stub\0\0\0__TEXT\0\0\0\0\0\0\0\0\0\0êL\0\0ð\0\0\0ê<\0\0\0\0\0\0\0\0\0\0\0\0\0\b\0\0\0\0\0\0\0\0__stub_helper\0\0\0__TEXT\0\0\0\0\0\0\0\0\0\0ÜM\0\0Þ\0\0Ü=\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0__cstring\0\0\0\0\0\0\0__TEXT\0\0\0\0\0\0\0\0\0\0ºO\0\0â\0\0\0º?\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0__gcc_except_tab__TEXT\0\0\0\0\0\0\0\0\0\0P\0\0L\r\0\0@\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0__unwind_info\0\0\0__TEXT\0\0\0\0\0\0\0\0\0\0è]\0\0¤\0\0\0èM\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0__eh_frame\0\0\0\0\0\0__TEXT\0\0\0\0\0\0\0\0\0\0^\0\0p\0\0N\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0__DATA\0\0\0\0\0\0\0\0\0\0\0`\0\0\0\0\0\0P\0\0\0\0\0\x07\0\0\0\0\0\0\0\0\0\0\0\0\0__dyld\0\0\0\0\0\0\0\0\0\0__DATA\0\0\0\0\0\0\0\0\0\0\0`\0\0\b\0\0\0\0P\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0__nl_symbol_ptr\0__DATA\0\0\0\0\0\0\0\0\0\0\b`\0\0\0\0\0\bP\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0(\0\0\0\0\0\0\0__la_symbol_ptr\0__DATA\0\0\0\0\0\0\0\0\0\0`\0\0 \0\0\0P\0\0\0\0\0\0\0\0\0\0\0\0\0\x07\0\0\0-\0\0\0\0\0\0\0__data\0\0\0\0\0\0\0\0\0\0__DATA\0\0\0\0\0\0\0\0\0\0¼`\0\0\0\0\0¼P\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0__common\0\0\0\0\0\0\0\0__DATA\0\0\0\0\0\0\0\0\0\0À`\0\0D\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\08\0\0\0__LINKEDIT\0\0\0\0\0\0\0p\0\0\0\0\0\0`\0\0°\0\0\x07\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0$`\0\0x\0\0\0g\0\0\x07\0\0\v\0\0\0P\0\0\0\0\0\0\x003\0\0\x003\0\0\0\0\0\0M\0\0\0+\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0Äe\0\0U\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\f\0\0\0/usr/lib/dyld\0\0\0\0\0\0\0\0\0í\tg?¸¨Ä»|¥¸$\0\0\0\0\0\0\0\n\0\0\b\n\0\0\0\0P\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0P%\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\f\0\0\x004\0\0\0\0\0\0\0\0\0\0\08\0\0\0\x07\0/usr/lib/libstdc++.6.dylib\0\0\f\0\0\x004\0\0\0\0\0\0\0\0\0\0\0\0\0\0/usr/lib/libgcc_s.1.dylib\0\0\0\f\0\0\x004\0\0\0\0\0\0\0\0\0\0©\0\0\0\0/usr/lib/libSystem.B.dylib\0\0&\0\0\0\0\0\0\0`\0\0$\0\0\0)\0\0\0\0\0\0$`j\0åäðì]$M\bL$ÃÁãË\\$\bè\0\0\0ôUåSWVìE\b£À`\0\0}\f=Ä`\0\0u5È`\0\0\x07¹ºO\0\0ÀtëÈHëú/tôAQÿÒuóÁ\rÌ`\0\0ó;\0[uø¡`\0\0\0ÀtÿÐ¡\b`\0\0\0ÀtÿÐè'\0\0EìD$Ç$»O\0\0ès\0\0\0ÿUìEðD$Ç$èO\0\0è]\0\0\0EðÀt\b$èZ\0\0¡\f`\0\0Ç\0\0\0\0\0\\$\ft$\b|$E\b$è³\"\0\0$è`'\0\0ì\bPQè\0\0\0\0Xb:\0\0L$\f¦9\0\0L$\bYXÃfè\0\0\0\0X9\0\0ÿàUåìE\bEðÇEô\0\0\0E\fEøMðUè\\\0\0\0Ä]Ã\0\0\0\0UåE\bÇ\0\0\0\0]ÃfUåVìè\0\0\0\0Xu\bt$\bt$äÿÿÿ$ÿVÀtÇÿÿÿÿÄ^]ÃfD\0\0fD\0\0UåSWVì,UØMÜè\0\0\0\0XEàEäD$Ç$\0\0\0èK&\0\0À3\0\0EäÀuÇD$\0\0\0Ç$\0\0\0è@&\0\0À\0\0ÆFÀÕ\0\0\0EàÚ(\0\0$ÇD$\0\0\0è&\0\0ÀÒ\0\0\0ÇEàõ(\0\0L$<$èÿ%\0\0F\bEà)\0\0D$<$èç%\0\0F\fN\bÉ\0\0\0ÃÛ\0\0\0ÇEè\0\0\0\0MìUèT$\bT$Uà¬ÿÿÿ$ÿÑÀudMè\f$ÿÓEèøÿtTÀuEè$ÿÓÆF°ë\"Eà)\0\0D$<$èo%\0\0FÀt$ÆF°öt*~\0u<ugÇ$\0\0\0èZ%\0\0Àut$Ç$\0\0\0è%\0\0¸ÿÿÿÿÄ,^_[]ÃMÜPQP\bI\bH\fN\bFt$Ç$\0\0\x001öèÛ$\0\0À¸ÿÿÿÿDÆë¾<r_MÜy\0t,~\bt$Ç$\0\0\0è¯$\0\0ÀuMÜ1A\bUØT$\bD$ë ~t$Ç$\0\0\0è$\0\0ÀeÿÿÿMÜ14$ÿ×é[ÿÿÿ~\bt$Ç$\0\0\0èY$\0\0À;ÿÿÿÇ$\f\0\0\0èu$\0\0À'ÿÿÿMÜQPI\bH\bUØT$\bD$Eà\\\0\0$ëD\0\0UåSWVì\fÇ$\0\0\0èë#\0\0Àu\bÇu\bÆEó\x001ÛëGEóÆG_|$Ç$\0\0\0èÉ#\0\0~\0tF\b$ÿÿtÇ$\0\0\0è#\0\0Çÿtjf\0\0\0\0\0wötZ9ÞtVG|$Ç$\0\0\0è|#\0\0~\bÿw¸\0\0\0£ør¸*\0\0\0£øs\t~\f<$ÿV4$èy#\0\0Ç$\0\0\0è7#\0\0ÀÇu¡ÇÿtEóG|$Ç$\0\0\0è!#\0\0Ä\f^_[]ÃfD\0\0\0\0\0\0Uåìè\0\0\0\0XM\bMðÇEô\0\0\0\0Mð5\0\0èiüÿÿÄ]ÃUå1À]ÃUå¸\0\0\0]ÃUåSWVM\böÁUu}E]\fuþØ\tÈ1ð¯Â¯E ¶Àë¯ÃøðÐE \tÈ%ÿ\0\0^_[]ÃUå¸\0\0\0]ÃUå¸\0\0\0]ÃUå¸\0\0\0]ÃUå1À]ÃUåSWVìUðÎ4$èµ!\0\0Àó\0\0\x001ÿû|$4$è÷!\0\0¾\04$ÃGè!\0\09ÇrâUð$è!\0\0ørAUð$èp!\0\0øw1öëC1ö¿\0\0\0|$Uð$è«!\0\0¾\0Uð$ÆGè@!\0\09ÇrÜëUð$ÇD$\0\0\0è!\0\0¾0Uð$è!\0\0Àu1ÀëMUð$ÇD$\0\0\0\0èX!\0\0¾\0EìUð$ÇD$\0\0\0è?!\0\0¾8Uð$ÇD$\0\0\0}ìè&!\0\0¾\0ø¯ÆØÄ^_[]Ã1Ûé(ÿÿÿUåSWVì\fu\ft$M\b\f$èÚ \0\04$è \0\0Æ÷ÞÇë3M\f\f$è} \0\0ðD$E\b$èÆ \0\0ÃO|$M\f\f$è´ \0\0\0FÿÉÄ\f^_[]Â\0ë\0ÆM\b\f$è \0\04$è® \0\0è \0\0UåSWVìLÎè\0\0\0\0XT$\bh#\0\0D$}¾<$èÙ \0\0]ð$è \0\0\\$\b|$4$è\" \0\0$èü\0\0ÄL^_[]ÃÆ$èê\0\04$èB \0\0UåSWVì<è\0\0\0\0XEÈM\b\f$è§\0\0Æµ\0\0\0$è \0\00EÄ@EÌÇÃö\0\0\0<$è¿\0\0ÇNÃëç÷]ÌÃüEÌøü:\0\0$[üè\0\0ëä]è$èY\0\0\\$\b]È#\0\0\\$]à$èa\0\0ðD$\b\\$}Ø<$è\0\0ì|$E\b$èR\0\0<$èD\0\0$è<\0\0uè4$è\0\0u\b4$èØ\0\0ø\nr1Û¾ÿÿÿÿ}Ðë~1ÒØ÷u\fÒuEÌD°$èÑ\0\0FÆEÖ\0ÆE×\0\\$M\b\f$èï\0\0\0EÖMð\f$è\0\0MðL$\bMÖL$<$è«\0\0Mð\f$è\0\0|$MÌ\f±\f$è¸\0\0<$è\0\0CM\b\f$è>\0\09ÃoÿÿÿEÌÄ<^_[]ÃÆ}Ì\0±þÿÿEÄ$è\0\0ëQèy\0\0Æ<$èQ\0\0ë'èh\0\0èc\0\0Æ<$è;\0\0ë*èR\0\0ÆEè$ëÆ$è \0\0ðëèÆ]ð$èß\0\04$è7\0\0UåSWVì¼\0\0è\0\0\0\0Xpýÿÿµ8þÿÿ4$è«\0\0E\b$è\0\0t$\bD$0þÿÿ$è®\0\04$è\0\0(þÿÿ$è¤\0\0 þÿÿ$è\0\0þÿÿ$è\0\0þÿÿ$èz\0\0µpýÿÿ¶ñ \0\0µ|ýÿÿt$µ0þÿÿ4$ÇD$\b\0\0\0\0è\0\0\0ÆFD$\b|ýÿÿD$0þÿÿ$èß\0\0ÇGD$\b|ýÿÿD$0þÿÿ$è¾\0\0ÃCD$\b|ýÿÿD$0þÿÿ$è\0\x001ÉþÿDñÿÿDùú\tòûÿDÙ\tÚøÿDÁ\tÐu\x070Ûég\0\0t$\f0þÿÿL$Pÿÿÿ\f$ÇD$\b\0\0\0\0èf\0\0ìPÿÿÿL$(þÿÿ\f$è\0\0Pÿÿÿ\f$èy\0\0ð÷ÐøD$\fFt$\bµ0þÿÿt$µXÿÿÿ4$è\0\0ìt$ þÿÿ\f$èC\0\04$è5\0\0þ÷ÖÞt$\fG|$\bµ0þÿÿt$µ`ÿÿÿ4$èÒ\0\0ìt$þÿÿ\f$èÿ\0\04$èñ\0\00þÿÿ$è\0\0D$\fC\\$\b0þÿÿD$½hÿÿÿ<$è\0\0ì|$þÿÿ$è³\0\0<$è¥\0\0ëKÃ½Pÿÿÿ<$è\0\0ë1èª\0\0Ã4$è\0\0ë è\0\0Ã4$èq\0\0ëè\0\0Ã<$è`\0\0$è\0\0þÿÿ$èü\0\0ÀñD$\fþÿÿD$\bþÿÿ$ÇD$\b\0\0\0èç\0\0ì\bþÿÿD$½@þÿÿ<$èü\0\0<$è²\0\0øw\tÆ|ýÿÿ\0ëi1öë#t$<$èî\0\08A|ât$<$èÝ\0\08ZÑFþ|Ø¾\0\0\0ë#t$<$è¿\0\080|³t$<$è®\0\089¢F<$èF\0\09ÆrÑÆ|ýÿÿ<$è\0\0½|ýÿÿ\0u\x070Ûé\0\0½þÿÿ|$½\0þÿÿ<$ÇD$\f\0\0\0ÇD$\b\0\0\0è\r\0\0ì½þÿÿ|$½øýÿÿ<$ÇD$\f\0\0\0ÇD$\b\f\0\0\0èâ\0\0ì½þÿÿ|$½Hþÿÿ<$ÇD$\f\f\0\0\0ÇD$\b\0\0\0\0è·\0\0ì|$þÿÿ$èä\0\0<$èÖ\0\0µ\bþÿÿt$µPþÿÿ4$è²\0\0µ þÿÿt$\bµ(þÿÿt$µhþÿÿ4$èB\0\0ìµþÿÿt$\bµhþÿÿt$µ`þÿÿ4$è\0\0ìþÿÿD$\bt$Xþÿÿ$èþ\0\0ì½XþÿÿPþÿÿùÚè'÷ÿÿðýÿÿÂèºøÿÿ<$è+\0\04$è#\0\0µhþÿÿ4$è\0\0$è\r\0\0ðýÿÿ\f$è½\0\0ÀþD$\bðýÿÿL$µpþÿÿ4$ÇD$\f\0\0\0è\0\0ìt$ðýÿÿ\f$èÉ\0\04$è»\0\0½øýÿÿ<$èe\0\0$èù\0\0Æðýÿÿ\f$èM\0\0$èá\0\09Æt\x070Ûéë\0\0½þÿÿ|$½èýÿÿ<$ÇD$\f\0\0\0ÇD$\b\0\0\0\0è\0\0ì<$è\x07\0\0$è\0\0|ýÿÿ½\bþÿÿ|$½xþÿÿ<$è\0\0½ þÿÿ|$\b½(þÿÿ|$½þÿÿ<$è­\0\0ìþÿÿD$\b|$þÿÿ$è\0\0ìµþÿÿxþÿÿñÚè·õÿÿlýÿÿ4$èÂ\0\0<$èº\0\0$è²\0\0½\bþÿÿ|$½þÿÿ<$è\0\0½ þÿÿ|$\b½(þÿÿ|$½¨þÿÿ<$è\0\0ì½þÿÿ|$\b½¨þÿÿ|$½ þÿÿ<$èù\0\0ìþÿÿD$\b|$þÿÿ$èÚ\0\0ìµþÿÿþÿÿñÚèõÿÿ4$è\0\0<$è\f\0\0½¨þÿÿ<$èþ\0\0$èö\0\0½þÿÿ<$ÇD$\0\0\0\0èì\0\0½ þÿÿ<$ÇD$\0\0\0\0èÖ\0\0µ°þÿÿñU\fèAöÿÿ4$ÇD$\0\0\0\0è¶\0\0àýÿÿ4$è\0\0Æáýÿÿ\0µàýÿÿ4$èÓ\0\0D$\b½pýÿÿ¿!\0\0|$½âýÿÿ<$èí\0\0µ¸þÿÿ4$è\0\0t$\b|$½Øýÿÿ<$è-\0\04$è\x07\0\0<$èç\0\0$kµ|ýÿÿ\nèn\0\0Çð÷ÿð)Ð¾÷îÖÁîµtýÿÿÁúxýÿÿ½þÿÿ<$è\0\0ÀþD$\f|$½Àþÿÿ<$ÇD$\b\0\0\0è\0\0ì|$þÿÿ$è¼\0\0<$è®\0\0½þÿÿ|$½Ðþÿÿ<$è\0\0|$½Èþÿÿ<$èôÿÿì|$þÿÿ$èu\0\0<$èg\0\0½Ðþÿÿ<$èY\0\0½Ðýÿÿ<$èE\0\0½Èýÿÿ<$è7\0\0½þÿÿ|$½Èýÿÿ<$è+\0\0xýÿÿòµ|ýÿÿ|½týÿÿòxýÿÿ1ö×Óµ|ýÿÿþÿÿ\f$è\0\09Çs'|$þÿÿ\f$èá\0\0¾\0D$Ðýÿÿ$è¨\0\0Èýÿÿ\f$èd\0\09Ãs\\$Èýÿÿ\f$ÇD$\b\0\0\0èp\0\0Ðýÿÿ\f$è8\0\09Æs%t$Ðýÿÿ\f$è|\0\0¾\0|ýÿÿTÐ|ýÿÿ½týÿÿxýÿÿFþNÿÿÿ½Ðýÿÿ<$èë\0\0øu\b|ýÿÿëT½þÿÿ<$èÐ\0\0HD$<$è\0\0¾0t$µÐýÿÿ4$èä\0\0÷<$è¤\0\0HD$<$èñ\0\0¾0|ýÿÿT2ÐÀýÿÿèTóÿÿÀýÿÿ\f$èq\0\0HD$\bÀýÿÿL$½Øþÿÿ<$ÇD$\f\0\0\0è^\0\0ì|$Àýÿÿ\f$è\0\0<$è}\0\0µ\0þÿÿ4$è'\0\0ÇÀýÿÿ\f$è\0\0|$$èã\0\0Àt\x070Ûék\t\0\0µÐýÿÿt$µèþÿÿ4$è$\0\0t$àþÿÿ$èòÿÿì\\$Ðýÿÿ$è\0\0$è\0\04$èù\0\0½Èýÿÿ<$è\0\0HD$\f|$½ðþÿÿ<$ÇD$\b\0\0\0è\0\0ì½Èýÿÿ|$½\0ÿÿÿ<$ÇD$\f\0\0\0ÇD$\b\0\0\0\0èe\0\0ìÐýÿÿ\\$\b|$øþÿÿ$è(\0\0ìðþÿÿD$\b\\$¸ýÿÿ$è\t\0\0ì$èX\0\0<$èP\0\0µðþÿÿ4$èB\0\0lýÿÿ}\f÷çD$\bpýÿÿø \0\0\\$]¾$Áÿ¯½lýÿÿ×|$\fè\0\0}ð<$èÇ\0\0|$\b\\$°ýÿÿ$èÕ\0\0ëÆ<$è«\0\04$è\0\0<$è\0\0Þt$µ\bÿÿÿ4$è«\0\04$ÇD$\0\0\0èñÿÿtýÿÿ4$è\0\0µÿÿÿ4$èU\0\0t$\bpýÿÿ!\0\0|ýÿÿ\\$ýÿÿ$èQ\0\04$è+\0\0µÿÿÿ4$è\0\0t$\bpýÿÿ&!\0\0D$ýÿÿ$è\0\04$èó\0\0µ ÿÿÿ4$èß\0\0t$\b|ýÿÿD$ýÿÿ$èç\0\04$èÁ\0\0µ(ÿÿÿ4$è­\0\0t$\b|ýÿÿD$ýÿÿ$èµ\0\04$è\0\0µ0ÿÿÿ4$è{\0\0t$\b|ýÿÿD$ ýÿÿ$è\0\04$è]\0\0µ8ÿÿÿ4$èI\0\0t$\b|ýÿÿD$¤ýÿÿ$èQ\0\04$è+\0\0µ@ÿÿÿ4$è\0\0t$\b|ýÿÿD$¨ýÿÿ$è\0\04$èù\0\0½¸ýÿÿ|$½Hÿÿÿ<$è\0\0|$ýÿÿ$ÇD$\f\0\0\0ÇD$\b\0\0\0è³\0\0ì<$èä\0\0µtýÿÿv4$è\0\0$è\0\0dýÿÿµxÿÿÿñU\fè<ïÿÿ÷<$ÇD$\0\0\0\0è¯\0\0¾0µ|ýÿÿ<$ÇD$\0\0\0è\0\0¾0µlýÿÿ<$ÇD$\0\0\0è}\0\0¾0µhýÿÿ<$ÇD$\0\0\0èd\0\0¾0µ`ýÿÿ<$ÇD$\0\0\0èK\0\0¾0µ\\ýÿÿ<$ÇD$\0\0\0è2\0\0¾0]$èâ\0\0\\$\bpýÿÿ\0!\0\0\\$pÿÿÿ$èä\0\0]$è»\0\0ýÿÿ\\$tÿÿÿ$èÇ\0\0|ýÿÿÐlýÿÿÐhýÿÿÐ½`ýÿÿÇÐ\\ýÿÿÃÐÆÐt$\\$|$µhýÿÿt$\fµlýÿÿt$\bµ|ýÿÿt$µdýÿÿ4$èêëÿÿD$\b½pýÿÿ¿ý \0\0|$}<$èÜ\0\0u¨4$è\0\0t$\b|$}<$è\"\0\0ëJøü\0\04$vüè\0\0ëçxýÿÿûüË\0\04$vüèü\r\0\0ëáÇ4$èÀ\r\0\0<$è\0\04$è°\r\0\0<$è\r\0\0øÓ\0\0\0}¸<$è\r\0\0|$\b½pýÿÿ¿l \0\0|$}°<$è\r\0\0}¸<$èj\r\0\0}<$èA\r\0\0¾\0\0\0)Æ¿ÿÿÿÿpýÿÿó \0\0|ýÿÿë|ýÿÿD$E°$èl\r\0\0G9÷|æ}|$}°<$è[\r\0\0|$}<$è(\r\0\0}°<$è)\r\0\0ë=ë\0Æ]°$è\r\0\0ëè/\r\0\0Æ]¸$èÔ\f\0\04$è,\r\0\0}|$}<$èÞ\f\0\0}<$èß\f\0\0u4$è\f\0\0t$\bpýÿÿl \0\0\\$ýÿÿ$è \f\0\04$èz\f\0\x001öëit$$è¦\f\0\01ÿë-|$pÿÿÿ\f$è\f\0\08u|$½tÿÿÿ<$èx\f\0\0ëGpÿÿÿ\f$è\v\f\0\09ÇrÁ0Û¾û|$½ýÿÿ<$è&\f\0\0F]$èä\v\0\09Ær}<$è#\f\0\x001öþø\0\0\0½tÿÿÿ<7Æü<$è\f\0\0ëáÇ]$èõ\v\0\0ë8è\f\f\0\0ë\0Çýÿÿ$èÜ\v\0\0ëèó\v\0\0èî\v\0\0Ç4$è\v\0\0u4$è»\v\0\0<$èã\v\0\0þøtrtÿÿÿ3Æü$è\v\0\0ëå<$èÀ\v\0\0½xÿÿÿ<$è\v\0\0½ýÿÿ<$è,\v\0\0Æýÿÿ$è\v\0\0t$$èè\v\0\0À¸\0\0\0½týÿÿ\0um0Ûéð\0\0\0ë\0Çxÿÿÿ$è.\v\0\0ëÇ]$èï\n\0\0»\0\0\0ëè1\v\0\x001öÇéWÿÿÿè#\v\0\0è\v\0\x001ÛÇ¾\0\0\0)ÞÁæpÿÿÿ\tÞÆü÷ÛxýÿÿéÁüÿÿtýÿÿpüt°üÇ÷ßÀütýÿÿ>ûüt\r4$vüè­\n\0\0ëëtýÿÿ$èÁ\n\0\0éQÿÿÿ½týÿÿ\0t=týÿÿpüt°üÇ÷ßÀütýÿÿ>ûüt\r4$vüèb\n\0\0ëëtýÿÿ$èv\n\0\0³½ýÿÿ<$èB\n\0\0½ýÿÿ<$è4\n\0\0¾\0\0\0þüt1¼5ýÿÿvü<$è\n\0\0ëçþüh\0\05ýÿÿvü$èû\t\0\0ëã½°ýÿÿ<$èë\t\0\0½¸ýÿÿ<$èÝ\t\0\0Àýÿÿ\f$èÏ\t\0\0½Èýÿÿ<$èÁ\t\0\0½Ðýÿÿ<$è³\t\0\0½Øýÿÿ<$è¥\t\0\0½èýÿÿ<$è\t\0\0ðýÿÿ\f$è\t\0\0½øýÿÿ<$è{\t\0\0½\0þÿÿ<$èm\t\0\0½\bþÿÿ<$è_\t\0\0½þÿÿ<$èQ\t\0\0½þÿÿ<$èC\t\0\0½ þÿÿ<$è5\t\0\0½(þÿÿ<$è'\t\0\0½0þÿÿ<$¶óè\t\0\0ðÄ¼\0\0^_[]Ãëë\0Æ<$èû\b\0\0ðéÚ\0\0è\r\t\0\0Æ<$èå\b\0\0ðéí\0\0è÷\b\0\0Ã<$èÏ\b\0\0é\0\0èã\b\0\0èÞ\b\0\0èÙ\b\0\0èÔ\b\0\0Ç4$è¬\b\0\0øéø\0\0è¾\b\0\0Ã4$è\b\0\0é!\0\0èª\b\0\0è¥\b\0\0è \b\0\0Ã4$èx\b\0\0é3\0\0è\b\0\0è\b\0\0è\b\0\0è}\b\0\0Ã4$èU\b\0\0éº\0\0èi\b\0\0Ã4$è\b\0\0é¦\0\0Æ<$è2\b\0\0ðéõ\0\0èD\b\0\0Æ<$è\b\0\0éõ\0\0è0\b\0\0è+\b\0\0ë\0ÆÈýÿÿ$èû\x07\0\0éé\0\0Æ<$èì\x07\0\0ðéë\0\0èþ\x07\0\0Ç$èÖ\x07\0\0éî\0\0èê\x07\0\0èå\x07\0\0Æ$è½\x07\0\0éø\0\0èÑ\x07\0\0èÌ\x07\0\0èÇ\x07\0\0ë\0Ç°ýÿÿ$è\x07\0\0éÞ\0\0Ç4$è\x07\0\0ëáè\x07\0\0Ç4$èG\x07\0\0¾\0\0\0éØ\0\0Ç4$è3\x07\0\0¾\0\0\0éÄ\0\0Ç4$è\x07\0\0¾\0\0\0é°\0\0Ç4$è\v\x07\0\0¾\0\0\0é\0\0Ç4$è÷\0\0¾\0\0\0é\0\0Ç4$èã\0\x001öéw\0\0è%\x07\0\0Æ<$èý\0\0ðév\0\0è\x07\0\0ëë\0Æýÿÿ$èÝ\0\0ðéb\0\0èï\0\0èê\0\0èå\0\0èà\0\0èÛ\0\0èÖ\0\0èÑ\0\0èÌ\0\0èÇ\0\0èÂ\0\0è½\0\0è¸\0\0è³\0\0è®\0\0è©\0\0è¤\0\0è\0\0è\0\0è\0\0Ç0þÿÿ$èg\0\0é\f\0\0Ç(þÿÿ$èR\0\0ëÛÇ þÿÿ$è@\0\0ëÞÇþÿÿ$è.\0\0ëÞÇþÿÿ$è\0\0ëÞÆ\bþÿÿ$è\n\0\0ðëÚÆ\0þÿÿ$èö\0\0éöüÿÿÆøýÿÿ$èá\0\0ëÛÃ½Pþÿÿ<$èÏ\0\0ØëÚÃ½hþÿÿ<$è»\0\0ëÜÃ4$è¯\0\0ëäÆðýÿÿ\f$è\0\0é³üÿÿÃ½èýÿÿ<$è\0\0Øë×Ã½xþÿÿ<$èt\0\0ëÜÃ<$èh\0\0ëäÃ½þÿÿ<$èV\0\0ë¾Ã½¨þÿÿ<$èD\0\0ëÞÃ<$è8\0\0ëäÃ½Øýÿÿ<$è&\0\0ëÆÐþÿÿ$è\0\0éÝüÿÿÆÐýÿÿ$èÿ\0\0éÈüÿÿÆÀýÿÿ\f$èê\0\0éÜüÿÿÇ4$èÛ\0\0øëÝÆðþÿÿ$èÇ\0\0éÖüÿÿÆ<$è¸\0\0ëáÇ¸ýÿÿ$è¦\0\0ëÉÇ4$èj\0\0¾\0\0\0¸\0\0\0)ð´ýÿÿ÷ÛéNöÿÿÇ¾\0\0\0é^úÿÿÇýÿÿ\f$èd\0\0øëàÇ4$è&\0\0<$è~\0\0èg\0\0UåSWVìlè\0\0\0\0XEE\bøE|\x07\0\0$è¢\0\0éP\0\0u\føt1Àë\vF\f$èP\0\0ÇF\b$èC\0\0=r0\0t=L¤\x07\0uE\x07\0\0ë\tE\x07\0\0$è\0\0E]¨$è\0\0F\\$\bD$E $è\0\0$èo\0\0ÿuPE D$u°4$è}\0\0ED$4$èsåÿÿÃ4$èp\0\0Ûtu¶\x07\0\04$èß\0\0é\0\0\0u¶8\x07\0\0ëè] \\$]¸$è-\0\0u¶3\x07\0\0t$Ø$ÇD$\b\0\0\0\0èÆ\0\0ÃCD$\bt$u¸4$è®\0\0ûÿt\x07Æþÿu71öt$u¶\x07\0\04$è]\0\0]¸$èÔ\0\0] $èÉ\0\x001ÀÄl^_[]Ã\\$\fM¸L$Mà\f$ÇD$\b\0\0\0\0èe\0\0ì¸þÿÿÿ)ØðD$\fÃ\\$\b]¸\\$]Ø$è<\0\0ìE¸$è\0\0D$\fÆt$\bu¸t$uÐ4$è\0\0ì\\$\b]à\\$]È$èÚ\0\0ìó\\$\b]Ø\\$]À$è¿\0\0ì\\$]è$èû\0\0]È\\$]ð$èé\0\0]ð}èÙúèÍßÿÿÆÑm$èÙ\0\0<$èÑ\0\0EÀ$èÆ\0\0EÈ$è»\0\0EÐ$è°\0\0EØ$è¥\0\0ë\b4$èË\0\0Eà$è\0\0¯uéþÿÿÆ$è}\0\0ðëvè\0\0è\0\0è\0\0è\0\0è~\0\0èy\0\0èt\0\0ÆEà$èI\0\0ë¤ÆEØ$è:\0\0ðëàÆEÐ$è)\0\0ðëÞÆEÈ$è\0\0ðëÞÆEÀ$è\x07\0\0ðëÞÆEè$èö\0\0\0ðëÞÆ$è¸\0\0\0ë;Ç4$èÜ\0\0\0øë èñ\0\0\0ÆM¸\f$èÆ\0\0\0ðë\nèÛ\0\0\0èÖ\0\0\0ÆM \f$è«\0\0\04$èÓ\0\0\0UåWVìE\fD$u\b4$è}\0\0\0ED$4$è\\\0\0\0Ä^_]Â\0Ç4$èg\0\0\0<$è\0\0\0èx\0\0\0ÿ%`\0\0ÿ% `\0\0ÿ%$`\0\0ÿ%(`\0\0ÿ%,`\0\0ÿ%0`\0\0ÿ%4`\0\0ÿ%8`\0\0ÿ%<`\0\0ÿ%@`\0\0ÿ%D`\0\0ÿ%H`\0\0ÿ%L`\0\0ÿ%P`\0\0ÿ%T`\0\0ÿ%X`\0\0ÿ%\\`\0\0ÿ%``\0\0ÿ%d`\0\0ÿ%h`\0\0ÿ%l`\0\0ÿ%p`\0\0ÿ%t`\0\0ÿ%x`\0\0ÿ%|`\0\0ÿ%`\0\0ÿ%`\0\0ÿ%`\0\0ÿ%`\0\0ÿ%`\0\0ÿ%`\0\0ÿ%`\0\0ÿ%`\0\0ÿ% `\0\0ÿ%¤`\0\0ÿ%¨`\0\0ÿ%¬`\0\0ÿ%°`\0\0ÿ%´`\0\0ÿ%¸`\0\0\0\0h`\0\0éjØÿÿ\0\0h `\0\0é^Øÿÿ\0\0h$`\0\0éRØÿÿ\0\0h(`\0\0éFØÿÿ\0\0h,`\0\0é:Øÿÿ\0\0h0`\0\0é.Øÿÿ\0\0h4`\0\0é\"Øÿÿ\0\0h8`\0\0éØÿÿ\0\0h<`\0\0é\nØÿÿ\0\0h@`\0\0éþ×ÿÿ\0\0hD`\0\0éò×ÿÿ\0\0hH`\0\0éæ×ÿÿ\0\0hL`\0\0éÚ×ÿÿ\0\0hP`\0\0éÎ×ÿÿ\0\0hT`\0\0éÂ×ÿÿ\0\0hX`\0\0é¶×ÿÿ\0\0h\\`\0\0éª×ÿÿ\0\0h``\0\0é×ÿÿ\0\0hd`\0\0é×ÿÿ\0\0hh`\0\0é×ÿÿ\0\0hl`\0\0éz×ÿÿ\0\0hp`\0\0én×ÿÿ\0\0ht`\0\0éb×ÿÿ\0\0hx`\0\0éV×ÿÿ\0\0h|`\0\0éJ×ÿÿ\0\0h`\0\0é>×ÿÿ\0\0h`\0\0é2×ÿÿ\0\0h`\0\0é&×ÿÿ\0\0h`\0\0é×ÿÿ\0\0h`\0\0é×ÿÿ\0\0h`\0\0é×ÿÿ\0\0h`\0\0éöÖÿÿ\0\0h`\0\0éêÖÿÿ\0\0h `\0\0éÞÖÿÿ\0\0h¤`\0\0éÒÖÿÿ\0\0h¨`\0\0éÆÖÿÿ\0\0h¬`\0\0éºÖÿÿ\0\0h°`\0\0é®Öÿÿ\0\0h´`\0\0é¢Öÿÿ\0\0h¸`\0\0éÖÿÿ\0__dyld_make_delayed_module_initializer_calls\0__dyld_mod_term_funcs\0/usr/lib/libSystem.B.dylib\0__cxa_atexit\0__cxa_finalize\0atexit\0**\0*\x000\0%u\0%llu\0%X\x000123456789ABCDEF\x001%i\x007654321234567898\x003194837251290356\0-1\0918232\x00218989\x001\0%i\n\0ÿ¸\04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x002\0\0\0\x004\0\0\0\b\0\0\0D\0\0\0<\0\0\0\r\0\0\0\0\0\0\0\0\0\0\0\0\0ÿEA\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\b\0\0\0n\0\0\0\0+\0\0\0.\0\0\0l\0\0\0\0n\0\0\0\r\0\0\0\0\0\0{\0\0\0\r\0\0\0\0\0\0\0\0\0\0\0\0\0ÿ\05\0\0\0\0\0\0U\0\0\0\0E\0\0\0\"\0\0\0\0\0\0\0\0ÿÕ\0Ð\0\0\0\0E\0\0\0\0\0\0\0\0E\0\0\0\b\0\0\0\0\0\0k\0\0\0\v\0\0\0²\0\0\0\0\0\0\0\0Þ\0\0\0\0\0\0\0\0\0è\0\0\0·\0\0\0\0\0\0·\0\0\0Æ\0\0\0\b\0\0\0è\0\0\0Î\0\0\0\b\0\0\0Þ\0\0\0Ö\0\0\0i\0\0\0\0\0\0\0\0?\0\0\0\0\0ö\0\0\0`\0\0\0\0\0Í\0\0\0r\0\0G\0\0\0\0\0\0\0\0¹\0\0\b\0\0\0Ã\0\0Ï\0\0\b\0\0\0Ù\0\0ê\0\0\b\0\0\0È\0\0ò\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0ÿù\0ô&\0\0\0!\0\0\0§\0\0\0O\0\0\0\0\0\0\0\0\0]\0\0\0\0\0\0¥\0\0\0k\0\0\0\0\0\0·\0\0\0y\0\0\0\0\0\0É\0\0\0\0\0\0á\0\0\0Û\0\0\0h\0\0\0\0\0d\0\0\0\0\08\0\0\0Û\0\0\0¸\0\0\0\0\0{\0\0\0Ê\0\x002\0\0\0Û\0\0\0ü\0\0\0\0\0\0\0\0\0\0:\0\0\0Û\0\0\0H\0\0\0\0\0\0\0\0Z\0\0\b\0\0\0Û\0\0\0f\0\0\0\0\0v\0\0}\0\0\b\0\0\0\0\0\0\0\b\0\0\0\0\0\0\0\b\0\0\0¹\0\0§\0\0@\0\0\0Û\0\0\0ç\0\0\0\0\0í\0\0\0ÿ\0\0\b\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0H\0\0+\0\0\0þ\0\0\0~\0\0C\0\0\0í\0\0\0Á\0\0+\0\0\0\0\0\0ì\0\0+\0\0\0\0\0\0\0\0\0\0\0\0\0\0)\0\0 \0\0\0\0\0\0I\0\0%\0\0\0(\0\0\0n\0\0%\0\0\0<\0\0\0\0\0\0\0\0N\0\0\0²\0\0\"\0\0\0.\0\0\0Ô\0\0\b\0\0\0N\0\0\0Ü\0\0\b\0\0\0<\0\0\0ä\0\0\0\0\0(\0\0\0ò\0\0\b\0\0\0\0\0\0ú\0\08\0\0\0Z\0\0\x002\0\0\0\0\0Q\0\0\0D\0\0l\0\0\0Z\0\0\0°\0\0.\0\0\0o\0\0\0Þ\0\0%\0\0\0\0\0\0\0\0\0\0\0\0\0\0\"\0\0\0\0\0g\0\0\0=\0\0\b\0\0\0\0\0\0E\0\0\b\0\0\0\0\0\0M\0\0 \0\0\0o\0\0\0m\0\0%\0\0\0¡\0\0\0\0\0%\0\0\0³\0\0\0·\0\0\0\0\0Å\0\0\0Ö\0\0\0\0\0\0\0\0ë\0\0\b\0\0\0Å\0\0\0ó\0\0\b\0\0\0³\0\0\0û\0\0\0\0\0¡\0\0\0\t\x07\0\0D\0\0\0o\0\0\0M\x07\0\0\0\0\0¨\0\0\0e\x07\0\0\b\0\0\0o\0\0\0²\x07\0\0\0\0\0¼\0\0\0Ð\x07\0\0o\0\0\0Ñ\0\0\0?\b\0\0\0\0\0Ë\0\0\0Q\b\0\0 \0\0\0Ñ\0\0\0q\b\0\0\0\0\0ã\0\0\0\b\0\0\0\0\0á\0\0\0\b\0\0\b\0\0\0ã\0\0\0 \b\0\0\0\0\0Ñ\0\0\0¼\b\0\0\0\0\0ø\0\0\0Ê\b\0\0\0\0\0ü\0\0\0\t\0\0\0\0\0ú\0\0\0À\t\0\0z\0\0\0ü\0\0\0:\n\0\x006\0\0\0\r\0\0\0p\n\0\0\0\0\0\0\0\0\n\0\0U\0\0\0\r\0\0\0×\n\0\0\0\0\0\"\0\0\0ì\n\0\0\0\0\0'\0\0\0þ\n\0\0\b\0\0\0\"\0\0\0\v\0\08\0\0\0\r\0\0\0>\v\0\0+\0\0\x000\0\0\0i\v\0\0\0\0\0E\0\0\0\v\0\0\0\0\0@\0\0\0§\v\0\0\b\0\0\0E\0\0\0¯\v\0\0\b\0\0\x000\0\0\0·\v\0\0\0\0\0\r\0\0\0\n\f\0\0\0\0\0\"\f\0\0\0,\f\0\0\b\0\0\0Q\0\0\0<\f\0\0\0\0\0`\0\0\0P\f\0\0\0\0\0u\0\0\0f\f\0\0\b\0\0\0`\0\0\0|\f\0\0(\0\0\0c\0\0\0º\f\0\0\"\0\0\0\0\0\0ò\f\0\0\0\0\0\0\0\0$\r\0\0\0\0\0®\0\0\0V\r\0\0\0\0\0Â\0\0\0\r\0\0\0\0\0Ö\0\0\0º\r\0\0\0\0\0ê\0\0\0Þ\r\0\0\0\0\0\0\0\0ö\r\0\0%\0\0\0\0\0\0\0\0\0\b\0\0\0\0\0\0#\0\0/\0\0\0\0\0\0R\0\0\0\0\0É\0\0\0ï\0\0\"\0\0\0Û\0\0\0\0\0\0\0\0\x07\0\0\0À\0\0\0\0\0\r\0\0\0á\0\0\v\0\0\0û\0\0\0\0\0\v\0\0\0ï\0\0\0\0\b\0\0\0ô\0\0\0'\0\0\b\0\0\0\0\0\0C\0\0\0\0\0ö\0\0\0m\0\0\v\0\0\0â\0\0\0\0\0\0\0\0à\0\0\0²\0\0!\0\0\0â\0\0\0Ó\0\0\v\0\0\0\0\0\0â\0\0\r\0\0\0ñ\0\0\0\0\0\0\0\0\0\0\0\0\v\0\0\0ô\0\0\x003\0\0\"\0\0\x007\0\0\0a\0\0\f\0\0\0\0\0\0s\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0 \0\0\0\0\0\0\0\0´\0\0!\0\0\0\0\0\0Ù\0\0\v\0\0\0ô\0\0\0û\0\0\b\0\0\0Ç\0\0\0\x07\0\0\v\0\0\0\0\0\0\0\0\0\0-\0\0A\0\0\v\0\0\x002\0\0L\0\0\b\0\0\0ô\0\0\0e\0\0\b\0\0\0ý\0\0o\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0Ë\0\0\0\0\0\0\0O\0\0\v\0\0\0\0\0\0\0\0\v\0\0\0\0\0\0·\0\0\0\0\0\0\0\0Å\0\0\0\0\0\0\0\0Ý\0\0\0\0\0^\0\0\0ú\0\0\0\0\0;\0\0\0\0\0\0\0Q\0\0\0\0\0\0\0\0\r\0\0\0*\0\0\0\0\0ü\0\0\08\0\0\0\0\0ø\0\0\0F\0\0\0\0\0Ñ\0\0\0T\0\0\0\0\0o\0\0\0b\0\0\0\0\0Z\0\0\0p\0\0\0\0\0\0\0\0~\0\0\0\0\0\0\0\0\0\0\0\0\0í\0\0\0\0\0\0\0\0Û\0\0\0¨\0\0\0\0\0É\0\0\0¶\0\0\0\0\0·\0\0\0Ä\0\0\0\0\0¥\0\0\0Ò\0\0\0\0\0\0\0\0à\0\0$\0\0\0\0\0\0\0\0\0\0\b\0\0\0\0\0\0\0\b\0\0\0)\0\00\0\0\b\0\0\0=\0\0S\0\0\b\0\0\0b\0\0i\0\0\b\0\0\0v\0\0\0\0\b\0\0\0\0\0ª\0\0\b\0\0\0·\0\0Í\0\0\b\0\0\0Ü\0\0ã\0\0\b\0\0\0ð\0\0þ\0\0\0\0\0O\0\0\0\0\b\0\0\0\"\0\0)\0\0\b\0\0\x006\0\0B\0\0\b\0\0\0O\0\0b\0\0\0\0\0@\0\0w\0\0\b\0\0\0\0\0\0\0\b\0\0\0\0\0\0\0\0\0\x001\0\0\0\0\0\0\0\0\0§\0\0\0\0\0\0\0¹\0\0\0\0\0\0\0Ë\0\0\0\0\0|\0\0Û\0\0\0\0\0w\0\0í\0\0\0\0\0r\0\0\0\0\0\0\0m\0\0\0\0\0\0\0h\0\0*\0\0\0\0\0L\0\0>\0\0\0\0\0G\0\0P\0\0\b\0\0\0B\0\0Z\0\0\0\0\0c\0\0q\0\0\0\0\0^\0\0\0\0\0\0\0\0\0\0\0\b\0\0\0{\0\0£\0\0\0\0\0£\0\0µ\0\0\0\0\0\0\0Ç\0\0\b\0\0\0\0\0Ñ\0\0\0\0\0Y\0\0å\0\0\0\0\0õ\0\0ú\0\0\0\0\0T\0\0\r\0\0\0\0\0J\0\0$\0\0\b\0\0\0;\0\02\0\0\0\0\0Y\0\0G\0\0\b\0\0\0T\0\0S\0\0\0\0\0E\0\0\0\0\0\0\x006\0\0£\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0ÿ²\0­\0\0\0\0\0\0W\0\0\0®\0\0\0\0\0\0\0\0\0À\0\0\0\0\0\0c\0\0\0Ñ\0\0\0?\0\0\0\0\0\0\0\x007\0\0\0v\0\0\0j\0\0\v\0\0\0\0\0\0u\0\0\0\0\0\0\0\0\0\0\0\0!\0\0\0v\0\0\0´\0\0 \0\0\0ó\0\0\0Ô\0\0+\0\0\0\0\0\0ÿ\0\0\0\0\0\0\0\0\0\0\0\0\0$\0\0\x003\0\0\0\0\x005\0\0\0B\0\0\0\0\0F\0\0\0T\0\0\0\0\0Â\0\0\0h\0\0\b\0\0\0F\0\0\0p\0\0\b\0\0\x005\0\0\0x\0\0\v\0\0\0$\0\0\0\0\0\v\0\0\0\0\0\0\0\0\v\0\0\0\0\0\0\0\0\v\0\0\0ó\0\0\0¦\0\0\0\0\0v\0\0\0Ä\0\0\b\0\0\0Ð\0\0ó\0\0\r\0\0\0î\0\0\0\0\r\0\0\0é\0\0\0\0\r\0\0\0ä\0\0$\0\0\r\0\0\0ß\0\05\0\0\r\0\0\0Ú\0\0F\0\0\r\0\0\0Õ\0\0e\0\0\b\0\0\0q\0\0x\0\0\v\0\0\0\0\0\0\0\r\0\0\0\0\0\0\0\b\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0 \0\0\0\0\0\0$\0\0\0\0\0\0e\0QP\0\0P\0\0l\0\0\0<\0\0\0ë<\0\0\0\0\0\0l\0\0\0C\0\0Ü@\0\0Ë\0\0(A\0\x002\0\0HA\0\0=\0\0(B\0\0û8\0\0,L\0\0¡<\0\0@\0\0\0\0\0\f\0\b\0,\0\0\0\0\0Û\0ó\0\0{\x07\0\0â\x07\0\0í\t\0\0«#\0\0Q'\0%\0Qe\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0zPLR\0|\b\x07u\0\0\f\0\0,\0\0\0$\0\0\0sÌÿÿ\0\0\0\0\0\0\0\0\0\b\0\0\0\r\0\0\0,\0\0\0T\0\0\0¹íÿÿI\0\0\0«ñÿÿ\0\0\0\b\0\0\0\r\0\0\0\0\0,\0\0\0\0\0\0+Íÿÿ\0\0\0»ñÿÿ\0\0\0\b\0\0\0\r\0\0\0,\0\0\0´\0\0\0Íÿÿg\0\0\0×ñÿÿ\0\0\0\b\0\0\0\r\0\0\0,\0\0\0ä\0\0\0ºÍÿÿ\v\0\0Çñÿÿ\0\0\0\b\0\0\0\r\0\0\0,\0\0\0\0\0Ïÿÿ¾\0\0wòÿÿ\0\0\0\b\0\0\0\r\t\0\0\0,\0\0\0D\0\0#éÿÿ¦\0\0Küÿÿ\0\0\0\b\0\0\0\r\0\0\0\0à\bà\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0ÜM\0\0èM\0\0ôM\0\0\0N\0\0\fN\0\0N\0\0$N\0\x000N\0\0<N\0\0HN\0\0TN\0\0`N\0\0lN\0\0xN\0\0N\0\0N\0\0N\0\0¨N\0\0´N\0\0ÀN\0\0ÌN\0\0ØN\0\0äN\0\0ðN\0\0üN\0\0\bO\0\0O\0\0 O\0\0,O\0\08O\0\0DO\0\0PO\0\0\\O\0\0hO\0\0tO\0\0O\0\0O\0\0O\0\0¤O\0\0°O\0\0\0Ð*)×$0@ð,\x07\nI\n\n\n\x07g¾3¦\x07\0\0\0\0\0\0d\0\0\0\0\0\0\0C\0\0\0d\0\0\0\0\0\0\0Q\0\0\0f\0ø\"Q\0\0\0.\0\0&\0\0\0\0\0$\0\0&\0\0\0\0\0$\0\0\x000\0\0\0\0\0\0N\0\x000\0\0\0\0\0\0.\0\0À&\0\0¡\0\0\0$\0\0À&\0\0\0\0\0$\0\0\0\0\0\0\0\0\0N\0\0\0\0\0\0\0\0.\0\0Ð&\0\0µ\0\0\0$\0\0Ð&\0\0\0\0\0$\0\0\0@\0\0\0\0\0\0N\0\0@\0\0\0\0\0\0.\0\0'\0\0É\0\0\0$\0\0'\0\0\0\0\0$\0\0\0p\0\0\0\0\0N\0\0p\0\0\0\0\0.\0\0)\0\0Ø\0\0\0$\0\0)\0\0\0\0\0$\0\0\0\0\0\0\0\0\0N\0\0\0\0\0\0\0\0.\0\0*\0\0ì\0\0\0$\0\0*\0\0\0\0\0$\0\0\0,\0\0\0\0\0\0N\0\0,\0\0\0\0\0\0d\0\0\0\0\0\0ô\0\0\0\0\0y%\0\0ü\0\0\0\0\0P&\0\0\0\0\0\0t&\0\0(\0\0\0\0&\0\x006\0\0\0\0À&\0\0J\0\0\0\0Ð&\0\0^\0\0\0\0'\0\0m\0\0\0\0)\0\0\0\0\0\0*\0\0\0\0\0\0³*\0\0£\0\0\0\0½*\0\0½\0\0\0\0+\0\0×\0\0\0\0+\0\0ñ\0\0\0\0+\0\0\v\0\0\0\0++\0\0!\0\0\0\0Ë,\0\x000\0\0\0\0P\0\0B\0\0\0\0ÜP\0\0T\0\0\0\0(Q\0\0f\0\0\0\0HQ\0\0x\0\0\0\0(R\0\0\0\0\0\0,\\\0\0\0\0\v\0\0¼`\0\0®\0\0\f\0À`\0\0¶\0\0\f\0Ä`\0\0¾\0\0\0\0C,\0\0Ó\0\0\0\0$+\0\0ë\0\0\0\x002-\0\0\0\0\0\0¬*\0\0\0\0\0\0=/\0\0(\0\0\0¡L\0\0^\0\0\f\0Ì`\0\0j\0\0\0\0\0\0~\0\0\f\0\0Ð`\0\0\0\0\f\0\0Ô`\0\0²\0\0\f\0\0Ø`\0\0Ø\0\0\f\0\0Ü`\0\0ë\0\0\f\0\0à`\0\0\0\0\f\0\0ä`\0\0 \0\0\f\0\0è`\0\0=\0\0\f\0\0ì`\0\0W\0\0\f\0\0ð`\0\0x\0\0\f\0\0ô`\0\0\0\0\f\0\0ø`\0\0¾\0\0\f\0\0ü`\0\0ß\0\0\f\0È`\0\0è\0\0\0\0ûH\0\0î\0\0\f\0\0\0a\0\0ÿ\0\0\0\0P%\0\0\0\0\0\0\0\0\0\0 \0\0\0\0\0\0\0\x002\0\0\0\0\0\0\0\0A\0\0\0\0\0\0\0\0Q\0\0\0\0\0\0\0\0b\0\0\0\0\0\0\0\0t\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0¯\0\0\0\0\0\0\0\0Â\0\0\0\0\0\0\0\0Õ\0\0\0\0\0\0\0\0é\0\0\0\0\0\0\0\0÷\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\r\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0&\0\0\0\0\0\0\0\x003\0\0\0\0\0\0\0\0A\0\0\0\0\0\0\0\0R\0\0\0\0\0\0\0Z\0\0\0\0\0\0\0a\0\0\0\0\0\0\0\0w\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0±\0\0\0\0\0\0\0\0×\0\0\0\0\0\0\0\0ÿ\0\0\0\0\0\0\0\0'\x07\0\0\0\0\0\0\0\0-\x07\0\0\0\0\0\0\0\x003\x07\0\0\0\0\0\0\0\0;\x07\0\0\0\0\0\0\0\0C\x07\0\0\0\0\0\0\0\0J\x07\0\0\0\0\0\0\0\0Q\x07\0\0\0\0\0\0\0\0W\x07\0\0\0\0\0\0\0\0]\x07\0\0\0\0\0\0\0\0p\x07\0\0\0\0\0\0\0\0x\x07\0\0\0\0\0\0\0\0\x07\0\0\0\0\0\0\0\0\x07\0\0\0\0\0\0\0\0\x07\0\0\0\0\0\0\0\0:\0\0\0N\0\0\0O\0\0\0P\0\0\0Q\0\0\0R\0\0\0S\0\0\0T\0\0\0U\0\0\0V\0\0\0W\0\0\0X\0\0\0Y\0\0\0Z\0\0\0[\0\0\0\\\0\0\0]\0\0\0^\0\0\0_\0\0\0`\0\0\0a\0\0\0b\0\0\0c\0\0\0M\0\0\0e\0\0\0g\0\0\0h\0\0\0i\0\0\0j\0\0\0k\0\0\0l\0\0\0m\0\0\0n\0\0\0p\0\0\0q\0\0\0s\0\0\0t\0\0\0u\0\0\0v\0\0\0w\0\0\0f\0\0\0o\0\0\0r\0\0\0\0\0\0d\0\0\0:\0\0\0N\0\0\0O\0\0\0P\0\0\0Q\0\0\0R\0\0\0S\0\0\0T\0\0\0U\0\0\0V\0\0\0W\0\0\0X\0\0\0Y\0\0\0Z\0\0\0[\0\0\0\\\0\0\0]\0\0\0^\0\0\0_\0\0\0`\0\0\0a\0\0\0b\0\0\0c\0\0\0M\0\0\0e\0\0\0g\0\0\0h\0\0\0i\0\0\0j\0\0\0k\0\0\0l\0\0\0m\0\0\0n\0\0\0p\0\0\0q\0\0\0s\0\0\0t\0\0\0u\0\0\0v\0\0\0w\0\0\0 \0/private/var/tmp/llvmgcc42/llvmgcc42-2336.11~148/src/gcc/config/\0darwin-crt3.c\0/usr/llvm-gcc-4.2/bin/../lib/gcc/i686-apple-darwin11/4.2.1/crt3.o\0___cxa_atexit\0_cxa_atexit_check_2\0_cxa_atexit_check_1\0_atexit_common\0_cxa_atexit_wrapper\0_atexit\0__start\0dyld_stub_binding_helper\0__dyld_func_lookup\0___cxa_atexit\0_cxa_atexit_check_2\0_cxa_atexit_check_1\0_atexit_common\0_cxa_atexit_wrapper\0_atexit\0__ZL12Bit_Mangle_1iiiiiii\0__ZL12Bit_Mangle_2iiiiiii\0__ZL12Bit_Mangle_3iiiiiii\0__ZL12Bit_Mangle_4iiiiiii\0__ZL12Bit_Mangle_5iiiiiii\0__ZL11getChecksumSsSs\0__ZL8numtostrj\0GCC_except_table2\0GCC_except_table3\0GCC_except_table4\0GCC_except_table5\0GCC_except_table6\0GCC_except_table7\0dyld__mach_header\0_NXArgc\0_NXArgv\0__Z13reverseStringSs\0__Z14checkBlackListiiii\0__Z14makeSeedsArraySsi\0__Z18checkBlackList_oldii\0__Z4key1Ssi\0__ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_\0___progname\0__mh_execute_header\0_catch_exception_raise\0_catch_exception_raise_state\0_catch_exception_raise_state_identity\0_clock_alarm_reply\0_do_mach_notify_dead_name\0_do_mach_notify_no_senders\0_do_mach_notify_port_deleted\0_do_mach_notify_send_once\0_do_seqnos_mach_notify_dead_name\0_do_seqnos_mach_notify_no_senders\0_do_seqnos_mach_notify_port_deleted\0_do_seqnos_mach_notify_send_once\0_environ\0_main\0_receive_samples\0start\0__Unwind_Resume_or_Rethrow\0__ZNKSs4findEPKcm\0__ZNKSs4sizeEv\0__ZNKSs5c_strEv\0__ZNKSs6lengthEv\0__ZNKSs6substrEmm\0__ZNSaIcEC1Ev\0__ZNSaIcED1Ev\0__ZNSs5clearEv\0__ZNSs5eraseEmm\0__ZNSs6appendERKSs\0__ZNSs9push_backEc\0__ZNSsC1EPKcRKSaIcE\0__ZNSsC1ERKSs\0__ZNSsC1Ev\0__ZNSsD1Ev\0__ZNSsaSERKSs\0__ZNSsixEm\0__ZNSspLEPKc\0__ZNSspLERKSs\0__ZSt9terminatev\0__ZdaPv\0__Znam\0___gxx_personality_v0\0___keymgr_dwarf2_register_sections\0__cthread_init_routine\0__keymgr_get_and_lock_processwide_ptr\0__keymgr_get_and_lock_processwide_ptr_2\0__keymgr_set_and_unlock_processwide_ptr\0_atoi\0_atol\0_calloc\0_dlopen\0_dlsym\0_errno\0_exit\0_free\0_mach_init_routine\0_malloc\0_printf\0_puts\0_sprintf\0_strcmp\0\0";
        var macPPCKeyStr = "";
    } else {
        var winBase64KeyStr = "MZ\0\0\0\0\0\0\0ÿÿ\0\0¸\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0à\0\0\0º\0´\tÍ!¸LÍ!This program cannot be run in DOS mode.\r\r\n$\0\0\0\0\0\0\0úgF¾ÿ\t¾ÿ\t¾ÿ\t·»ÿ\t¾ÿ\bÿ\tÑ¦®ÿ\t·¿ÿ\tÑ¢¿ÿ\tÑ¿ÿ\tRich¾ÿ\t\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0PE\0\0L\0ÕQ\0\0\0\0\0\0\0\0à\0\v\n\0\0.\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0@\0\0\0\0@\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0p\0\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0<E\0\0<\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`\0\0à\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0@\0\x004\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0.text\0\0\0-\0\0\0\0\0\0.\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0 \0\0`.rdata\0\0^\0\0\0@\0\0\0\b\0\0\x002\0\0\0\0\0\0\0\0\0\0\0\0\0\0@\0\0@.data\0\0\09\0\0\0P\0\0\0\0\0\0:\0\0\0\0\0\0\0\0\0\0\0\0\0\0@\0\0À.reloc\0\0\0\0\0`\0\0\0¸XA@\0Ã¸`A@\0Ã¸hA@\0Ã¸tA@\0ÃVñè¥\f\0\0öD$\bt\x07VèÄ\r\0\0YÆ^Â\0¸A@\0Ã¸A@\0ÃöD$VñÇ\bB@\0t\x07Vè\r\0\0YÆ^Â\0¸A@\0Ã¸¤A@\0Ã¸°A@\0Ãh¸D@\0èê\r\0\0¡P@\0YÀt\x07PèÚ\r\0\0YhðD@\0èÏ\r\0\0YÃÁ\rP@\0\bÃ¡P@\0VñD$\b\bPÿR\fÆ^Â\0UìQ}\b\0¡P@\0VñWuEÿPè«\0\0èÿÿÿÿu\bÿ@@\0øÿu\x07¡P@\0ëjèÞ\f\0\0YÈÉt\fÿu\bÇèæ\v\0\0ë3À_Æ^ÉÂ\0\tÉtÿ`ÃD$Vñ\bW>PÿR\f\x07ÏÿP_Æ^Â\0\tÿ VñÉtÿP¡P@\0^ÃUìQVQÈÿRðÎÿ9E\brEÿPèj\0\0èÜþÿÿF\bE\b^ÉÂ\0D$QèI\0\0Â\0ÿt$QèÍ\0\0Â\0Uìì\fVñÿP,ÀtE\bS]ôÇEô¬C@\0EøèU\0\0\0[ëMÿ\r\0P@\0I;ÁrhðA@\0EÿPè¹\0\0èfþÿÿjèÍ\v\0\0YÀtH\bM\bÆ@\0Ç\0$D@\0H\fë3ÀÆ^ÉÂ\0UììWVÿPøÿEôËÿ\r\0P@\0+ÈEø9MôrhðA@\0EÿPèH\0\0èõýÿÿEôEøÿP9Eøw\vÿP0Àt;j}ðè<\v\0\0YÈÉt\fEøè0\n\0\0øë3ÿMðÿw\bEôI\bèô\f\0\0YMðÿP>G\bEôMìEìQËÿP\bEøGÆ_ÉÃUìì\fS]\b\vVWøÿP,Àtuôè\n\0\0u\bØèÿÿÿë]\vÿðÿ\r\0P@\0+È;ñrhðA@\0E\vPèw\0\0è$ýÿÿjè\n\0\0ðYötWÿP\f\vÆF\0ÇèC@\0N\bF\fë3ö3Ã_^[ÉÂ\0Uìì\fSVW}\bÿP,Àt}\fuôèn\t\0\0u\bØèþÿÿëxj\fè&\n\0\0YÀtÿu\fðè¡\b\0\0ðë3öÿØÎÿ\r\0P@\0+È;ÙrjÎÿP4hðA@\0E\vPèÀ\r\0\0èmüÿÿjèÔ\t\0\0YÀtÆ@\0Ç\0èC@\0H\bp\fë3À\x07Ç_^[ÉÂ\b\0UìQQSVWùÿð9u\bvEÿPè©\r\0\0èüÿÿÞ+]\b;]\fv]\f+óu\fuÿP,Àt9WÿP`\0WÿPðÿP,Àt(F\bE\bM\f+M\bè/\v\0\0E\fFë\\ÿP¡P@\0\x07ëPjè\t\0\0YÈÉt\nE\fè\b\0\0ë3À\x07@\bN\bEøPE\bèÑ\n\0\0U\bE\f\f]øN\bÚ+ÂSè¸\n\0\0YYÎÿPÇ_^[ÉÂ\b\0QÈÿR(ÃUìQQM\bSVWøÿðuüÿØ;Þ\0\0\0E\fË+Î;Á\0\0\0ö\0\0\0WÿP}üp\bE\fM\bQ\buø<u+Ø¾SPÇè\n\0\0YYÀtP+ÆëQ5P@\0;uür3öEø+Ç+EüDÀt)P¾P>èP\n\0\0øYYÿtÿuü+þè\t\0\0YÀtFGëÀ5P@\0¡\0P@\0_^[ÉÂ\b\0Ç+Eø5P@\0ëìUìì\fSVWÿu\f}\buôÙèÿ\0\0PÃèÿÿÿ_^[ÉÂ\b\0Uì¡P@\0SVW}\bñ\x07VÿPØÿð9u\fvE\vPè¤\v\0\0èúÿÿ+u\f9usuöu\x07¡P@\0ë jèg\x07\0\0YÈÉtC\bE\fPÆèk\0\0ë3À\x07Ç_^[]Â\f\0ÁH\fVp\bWÿøÎÿÇ_^ÃI\bÿ@ÃAÃ3À@Ã3ÀÃÿ A\fÃVÿt$\bñN\bÿP\bN\f^ÿ`\bVt$\bWùO\bVÿP\bO\f\bÿ_^Â\0VW|$\f\x07ñNV\bèº\b\0\0F\x07_^Â\0D$I\nÿ\0Â\0Â\0UìQVWjùè\0\0ðYöt\x07ÏÿÎè\0\0ðë3öF\bMüEü\x07QÏÿP\b}\bÿP7_Æ^ÉÂ\0Vñ~\f\0t.jèE\0\0YÈÉtÿv\bFèL\0\0ðë3öW|$\fÿP7_Æ^Â\0UìQVWj\fùè\t\0\0ðYöt\x07Ïÿèk\0\0ðë3öF\bMüEü\x07QÏÿP\b}\bÿP7_Æ^ÉÂ\0ÁÂ\0VWù\f\0j\fu6è¶\0\0YÀt`\0`\b\0Ç\0B@\0ðë3öGFg\0O\bF\bN\bG\bëè\0\0ðYötÿw\bGè0\0\0ðë3ö|$\fÿP7_Æ^Â\0VWjñèI\0\0Y3É;ÁtHH\bÇ\0¼B@\0H\føë3ÿFGV\bNG\bW\bF\bO\fjÎÿP4Ç_^ÃÁÃVWjñèù\0\0YÈÉtÿv\bFè\0\0\0øë3ÿöt\tjÎÿP4Ç_^ÃUìQSVWù\x07ÿjØè¹\0\0ðYötÃè\0\0ÇøB@\0^\f^ë3öF\bMüEü\x07QÏÿP\b}\bÿP7_^[ÉÂ\0VWjùèl\0\0Y3É;ÁtHH\bÇ\0øB@\0H\fðë3öGFF\fOO\bF\bN\bG\b|$\fÿP7_^Â\0SVWù3Ûj9_\fu9è\0\0Y;ÃtXX\bÇ\0øB@\0X\fðë3öGFF\fO\b_F\bN\bG\bë&èÚ\0\0ðY;ót_ÿw\bÃè\0\0ÇøB@\0^\fë3ö|$ÿP7_^[Â\0SVWjÙè\0\0ðYöt{ÿs\bÇèH\0\0ÇøB@\0~\fë3ö|$ÿP7_^[Â\0UìQSVWj\fùèV\0\0ðYöt\x07ÏÿØCè³\0\0Ç4C@\0^ë3öF\bMüEüØ\x07QÏÿP\bEü}\bÆ\0\0ÿP7_^Ã[ÉÂ\0A\bÂ\0A9A\fv\rQ\bÆ\0A\bÂ\0é~ÿÿÿVñ~\0tÆF\0^ÃN\bÿPN\fÿPjÎÿP4^ÃVñ~\0tÆF\0^ÃN\bÿPjÎÿP4^ÃÉt\x07jÿP4ÃA\fPÿQ\fÀu\x07jÿP4ÃÃUìQWù\0tGVjèa\0\0ðYöt\x07ÏÿÎèP\0\0ðë3öF\bÿF\fMüEü\x07QÏÿP\b}\bÿP7Æ^ëÆGÇ_ÉÂ\0VWj\fùè\f\0\0ðYöt\rÿw\bGè¼\0\0\0ë3À_^Â\0VWjñèæ\0\0øYÿtÎÿÿv\bÏèè\0\0\0ë3À_^Â\0Áÿ@\fÂ\0Vj\bñè´\0\0YÀtNÇ\0¬C@\0Hë3À^Â\x002ÀÃ°Ã3À8AÀÃPFÇB@\0è}\0\0F\bYÆÃÿt$f\0f\b\0ÇB@\0ÿ@@\0PFèU\0\0L$\bF\bPFè#\0\0YYÆÂ\0PFÇB@\0è/\0\0L$\bF\bPFèý\0\0YYÆÂ\0F\bÇB@\0Àt\x07Pè\0\0YÇ\bB@\0ÃVñèiÿÿÿf\f\0Ç¼B@\0Æ^ÃVÿt$\bñèÿÿÿf\f\0Ç¼B@\0Æ^Â\0WÇDB@\0ÿ@@\0F~\bÆÃÇDB@\0ÿFWÿP@\bF\bÆÃVjè\0\0\0ðYöt.D$\bWPÿR\føD$\bPÿR\f~\fÆF\0ÇèC@\0F\b_ë3öD$\b0^Ã=P@\0\0Wùu>Vj\fè:\0\0\0ðYöt 3À@èþÿÿF\bf\0ÇpC@\0Æ\0\05P@\0ë\x07%P@\0\0\r\0P@\0ÿ^Ç_Ãÿt$j\0ÿ@@\0Pÿ\f@@\0Ãÿt$j\0ÿ@@\0Pÿ@@\0Ãÿt$\bÿt$\bÿ@@\0ÃT$ëB¾è?\0\0Àuó¾\nVBWñù-tù+u¾\nB3ÀyÐÿ\tw\rkÀ\nD\bÐ¾\nBëë_þ-^u÷ØÃé±ÿÿÿUìì\0\0\0VWE\fPÿu\b\0üÿÿPÿ,@@\0ðV¸`P@\0½\0üÿÿèã\0\0Y_Æ^ÉÃSUVWè\0\0@@\0h\0\0\0j\bèÇ,Q@\0\0\0\0ÿÓPÿ\f@@\05\b@@\0jö£(Q@\0ÿÖ3ÿGjõ£HP@\0=LP@\0ÿÖjô£hP@\0=lP@\0ÿÖ£P@\0¸4@@\0¾@@@\0=P@\0ø;Æs\x07ÀtÿÐÇ;þrñj\0h P@\0Uèö\0\0Ä\fðèõ\0\0¡4Q@\0Àt\fPj\0ÿÓPÿ@@\0Vÿ\0@@\0_^][3É9L$u3ÀÃSV9L$\fvòÇ+÷:u\rA@;L$\frñ3À^[Ã¶9¶\f+ÁëñÉt!¶D$\biÀÑSW|$\fÁéó«Êáóª_[D$ÃVðötD$\b+È@Nu÷D$\b^ÃVWø;Âv4\n;ÆsNT\bÿÉtJNIu÷ëÉt\rð+òBIu÷Ç_^Ã|$\b\0t¶\b@;L$t\tÿL$\buð3ÀÃHÃÿ8P@\0%4P@\0\0=P@\0\0u.h\0\0\0Ç,P@\0ÿ\0\0èýÿÿY£P@\0Àu!,P@\0ÇP@\0`D@\0S»D@\0è\0\0\x003Ûè\b\0\0\0D$\b[Â\0Ût|U-@@\0VWSÿÕ5,P@\0ø¡4P@\0+ð;þ}\rP@\0SÈQÿ @@\0=4P@\0ëBö~>=P@\0øWÆËèàþÿÿYSÿÕ;ðvÎ+ÈÇj\0Pè þÿÿYY¡,P@\0\rP@\0Æ\0£4P@\0_^]Ã=(P@\0\0tFSV»¨D@\0èjÿÿÿ¡(P@\0è^ÿÿÿ¡(P@\0pë»°D@\0èJÿÿÿèCÿÿÿvöuè»´D@\0è2ÿÿÿ^[ÃSÿt$\bèÇþÿÿ¡8P@\0»ôD@\0£P@\0èÿÿÿ3Ûè\nÿÿÿD$\b[Â\0Sÿt$\bèÉÿÿÿ¡8P@\0»E@\0£ P@\0èäþÿÿ»ÌA@\0èÚþÿÿèVÿÿÿD$\b[Â\0Sÿt$\bèÿÿÿ¡8P@\0»E@\0£0P@\0è¯þÿÿ\\$\fè¦þÿÿ|$\f\0[tèÿÿÿD$Â\b\0Sÿt$\bèYÿÿÿ¡8P@\0»(E@\0£$P@\0ètþÿÿ»¸A@\0èjþÿÿèæþÿÿD$\b[Â\0\r0Q@\0Ét!¡(Q@\0VW<ð;ÇsÀtÿÐÆ;÷rñ_^Ãjÿÿ\0@@\0Ìø\t|ø\r~\bø t3ÀÃ3À@ÃUììS3Û]ü]ø9]\bu\x073Àé«\0\0\0ö@\fH\bVMô\0\0\x003É3À9]\b\0\0\05$@@\0P|ÿ\nUðu>;Ãv\x07|\x07ÿ\rt3;ÁvSUøR+ÁPÏQÿuôÿÖEøEüSEøPjh8E@\0ÿuôÿÖMðÿEüÑÂ;E\br®;Áv(SUøR+ÁPÏQÿuôÿÖEøEüëSEüPÿu\bWQÿ$@@\0Eü3Ò÷u\b^[ÉÃSV3ÛW P@\0ÿ@@\0øWÿ@@\0@PSÿ@@\0Pÿ\f@@\0ð54Q@\0;óu\x073Àé½\0\0\0WVÿ @@\0²\"8uF5 P@\08tà8tF8u÷8u!ëÑ5 P@\08t¾èªþÿÿÀuF8uï8tF3ÉA8tj¾èþÿÿÀtF8uï:ÃtS:ÂuF4 P@\0A P@\08t;8t+F8u÷ë$4 P@\0A P@\08t¾è>þÿÿÀuF8uï8t\bFù |Á_^[ÃUìQQEEüÿuüÿu\fÿu\bÿ,@@\0Eøeü\0EøÉÃUìQQÆEÿ\0eø\0ë\x07Eø@Eø}ø\0}*EøÁàM\b;H@@\0uEøÁàM\f;L@@\0uÆEÿëëÉEÿÉÃUìQQÆEÿ\0eø\0ë\x07Eø@Eø}ø\0}LEøÁàM\b;H@@\0u9EøÁàM\f;L@@\0u(EøÁàM;P@@\0uEøÁàM;T@@\0uÆEÿëë§EÿÉÃUìQQVE\fPMüèrëÿÿM\fèìÿÿEøë\x07EøHEø}ø\0~)EøHPM\fèìÿÿðM\fèìëÿÿ+EøPMüèýëÿÿ\bëÊEüPM\bè#ëÿÿMüèëÿÿM\fèëÿÿE\b^ÉÃUìì,M\bèªëÿÿEè3ÉEèjZ÷âÁ÷Ù\vÈ3ÀÁÀ÷Ø\vÁPèøÿÿYEä}ä\0t)EäMè\bh@\0ÿuèjEäÀPèë\0\0EäÀEÔëeÔ\0EÔEøMüÿM\bè;ëÿÿø\ns9E\bPh@@\0MàèêÿÿPEÜPè÷ÿÿÄ\fPM\bèíêÿÿMÜèÙêÿÿMàèÑêÿÿëºeô\0ë\x07Eô@EôM\bèèêÿÿ9Eôs]Eô3Ò÷u\fÒuEü@EüEüMø\fèÈêÿÿÿuôM\bèÔêÿÿ\0EìÆEí\0EìPMðèêÿÿEðPEüMø\fèâêÿÿMðèZêÿÿëEøEØM\bèJêÿÿEØÉÃUììD\0\0VM\bè*îÿÿPMðèËéÿÿXÿÿÿèéÿÿMøèéÿÿMÜèéÿÿMÀèéÿÿEðPEÀPEÜPEøPXÿÿÿPèq\0\0Ä¶ÀÀuEÆWÿÿÿ\0MÀèÒéÿÿMÜèÊéÿÿMøèÂéÿÿXÿÿÿè·éÿÿMðè¯éÿÿM\bè§éÿÿWÿÿÿé\t\0\0MÀèÂéÿÿèPjE¼PMÀèîÿÿQÌE¼Pèùèÿÿè\0\0Y¶ÀÀuMÆOÿÿÿ\0M¼èZéÿÿMÀèRéÿÿMÜèJéÿÿMøèBéÿÿXÿÿÿè7éÿÿMðè/éÿÿM\bè'éÿÿOÿÿÿé\t\0\0jjhÿÿÿPMÀè\rîÿÿjj\fEÄPMÀèýíÿÿj\fj\0HÿÿÿPMÀèêíÿÿPMÀèéèÿÿHÿÿÿèÒèÿÿQÌE¼PèIèÿÿQôEÜPEÀPEøPXÿÿÿP<ÿÿÿPèÎôÿÿÄ\fP8ÿÿÿPè¾ôÿÿÄ\fPVè´ôÿÿÄ\fèü\0\0YYPlÿÿÿPèR\t\0\0YY8ÿÿÿèfèÿÿ<ÿÿÿè[èÿÿjlÿÿÿè|èÿÿHHP4ÿÿÿPlÿÿÿè=íÿÿPlÿÿÿè9èÿÿ4ÿÿÿè\"èÿÿMÄèìÿÿPè\nõÿÿYðlÿÿÿèýëÿÿPèöôÿÿY;ðtkÆ3ÿÿÿ\0lÿÿÿèéçÿÿMÄèáçÿÿhÿÿÿèÖçÿÿM¼èÎçÿÿMÀèÆçÿÿMÜè¾çÿÿMøè¶çÿÿXÿÿÿè«çÿÿMðè£çÿÿM\bèçÿÿ3ÿÿÿéz\x07\0\0jj\0\\ÿÿÿPMÀèìÿÿ\\ÿÿÿèiëÿÿPè¬ôÿÿYE´QÌE¼PèßæÿÿQôEÜPEøPXÿÿÿP$ÿÿÿPèhóÿÿÄ\fPVè^óÿÿÄ\fè¦\r\0\0YY`ÿÿÿ$ÿÿÿèçÿÿQÌE¼PèæÿÿQôEÀPEÜPEøPXÿÿÿPÿÿÿPèóÿÿÄ\fPÿÿÿPèóÿÿÄ\fPVèûòÿÿÄ\fèC\r\0\0YYEÔÿÿÿè¹æÿÿÿÿÿè®æÿÿj\0MÜèïæÿÿ¾\0Pj\0Møèáæÿÿ¾\0Pÿu´ÿuÔèúÿÿÄ¶ÀÀtvÆÿÿÿ\0\\ÿÿÿèkæÿÿlÿÿÿè`æÿÿMÄèXæÿÿhÿÿÿèMæÿÿM¼èEæÿÿMÀè=æÿÿMÜè5æÿÿMøè-æÿÿXÿÿÿè\"æÿÿMðèæÿÿM\bèæÿÿÿÿÿéñ\0\0j\0ÿu\f\fÿÿÿPèÕ\0\0YYÈè8æÿÿ\0EÈ\fÿÿÿèÝåÿÿÆEÉ\0EÈPèóÿÿYPh@@\0EàPèáøÿÿÄ\fEàPMØèRåÿÿMØè éÿÿPèãòÿÿYdÿÿÿÿµdÿÿÿÿu´èú\0\0YYE¬MÀè¯åÿÿHHPj\bÿÿÿPMÀèqêÿÿPMÀèpåÿÿ\bÿÿÿèYåÿÿQÌEÀPèÐäÿÿ\0ÿÿÿPè@ùÿÿYYPMÀèBåÿÿ\0ÿÿÿè+åÿÿpÿÿÿèäÿÿMÌèäÿÿpÿÿÿPEÌPÿu¬jEÀPèn\n\0\0ÄEüÿuüEèPèÌ\0\0YYjMèèåÿÿHPüþÿÿPMèèÔéÿÿPMèèÓäÿÿüþÿÿè¼äÿÿhÿÿÿè¨èÿÿPMèèèÿÿPèñÿÿYYÀ\0\0\0Æûþÿÿ\0MèèäÿÿMÌèäÿÿpÿÿÿèväÿÿMØènäÿÿ\\ÿÿÿècäÿÿlÿÿÿèXäÿÿMÄèPäÿÿhÿÿÿèEäÿÿM¼è=äÿÿMÀè5äÿÿMÜè-äÿÿMøè%äÿÿXÿÿÿèäÿÿMðèäÿÿM\bè\näÿÿûþÿÿéé\0\0QÌpÿÿÿPèsãÿÿðþÿÿPèã÷ÿÿYYPpÿÿÿèâãÿÿðþÿÿèËãÿÿMÌèñãÿÿHPjìþÿÿPMÌè´èÿÿPpÿÿÿPjj\0èþÿÿPMÌèèÿÿPäþÿÿPè²ïÿÿÄ\fPEôPè¥ïÿÿÄ\fäþÿÿèmãÿÿèþÿÿèbãÿÿìþÿÿèWãÿÿ`ÿÿÿ3öE\fRPVQèd\0\0EUÿuÿuEìPèK\0\0Ä\fjQÌEìPèâÿÿè÷ÿÿYYE°Çtÿÿÿ\v1@\0Çxÿÿÿ1@\0Ç|ÿÿÿr1@\0ÇEz1@\0ÇE1@\0h @@\0Mèzâÿÿh´@@\0MèmâÿÿhÈ@@\0Mè`âÿÿhÜ@@\0MèSâÿÿhð@@\0M èFâÿÿhA@\0M¤è9âÿÿhA@\0M¨è,âÿÿjjQÌEôPèþáÿÿEÐPè;\v\0\0ÄjjEPtÿÿÿPjM°ÁèJæÿÿPèïÿÿYPÿu\fE¸Pè\0\0Ä MÐè+æÿÿPM¸è\"æÿÿPè\fïÿÿYYÀ\0\0E°ÔþÿÿÔþÿÿØþÿÿ½Øþÿÿ\0tjØþÿÿèL\r\0\0Àþÿÿë\x07¥Àþÿÿ\0ÆÓþÿÿ\0M¸èÒáÿÿMÐèÊáÿÿh@\0j\x07jEPèæ\f\0\0Mìè°áÿÿMôè¨áÿÿMèè áÿÿMÌèáÿÿpÿÿÿèáÿÿMØèáÿÿ\\ÿÿÿèzáÿÿlÿÿÿèoáÿÿMÄègáÿÿhÿÿÿè\\áÿÿM¼èTáÿÿMÀèLáÿÿMÜèDáÿÿMøè<áÿÿXÿÿÿè1áÿÿMðè)áÿÿM\bè!áÿÿÓþÿÿé\0\0\0E°ÈþÿÿÈþÿÿÌþÿÿ½Ìþÿÿ\0tjÌþÿÿèG\f\0\0¼þÿÿë\x07¥¼þÿÿ\0ÆÇþÿÿM¸èÍàÿÿMÐèÅàÿÿh@\0j\x07jEPèá\v\0\0Mìè«àÿÿMôè£àÿÿMèèàÿÿMÌèàÿÿpÿÿÿèàÿÿMØèàÿÿ\\ÿÿÿèuàÿÿlÿÿÿèjàÿÿMÄèbàÿÿhÿÿÿèWàÿÿM¼èOàÿÿMÀèGàÿÿMÜè?àÿÿMøè7àÿÿXÿÿÿè,àÿÿMðè$àÿÿM\bèàÿÿÇþÿÿ^ÉÃUì3À@]ÃUìQE\b%\0\0yHÈþ@Àu%E\fE\vE\bMM3ÁM¯M ¯Á%ÿ\0\0\0EüëE\f¯EEEEE \vE\b%ÿ\0\0EüEüÉÃUì3À@]ÃUì3À@]ÃUì3À@]ÃUììE\bkÀ\n÷}\fEôEô¯E\fEôEôj\nY÷ùEôE\b+EôEôEô@EôEôiÀ@B\0EøEôiÀ@B\0EüEü+Eøø~ÛEôÜPA@\0ß}ìEìEôEôÉÃUìì8ÿu\fhX@@\0EÈPè+òÿÿÄ\fEÈPMüèÞÿÿEüPM\bèrÞÿÿMüèçÞÿÿE\bÉÃUìì8ÿuÿu\fh\\@@\0EÈPèéñÿÿÄEÈPMüèZÞÿÿEüPM\bè0ÞÿÿMüè¥ÞÿÿE\bÉÃUìì@eÄ\0ÿu\fEøPèiÿÿÿYYj\0MøèÉÞÿÿ¾\0è0EüjMøè¶Þÿÿ¾\0è0EèjMøè£Þÿÿ¾\0è0EØjMøèÞÿÿ¾\0è0EÜjMøè}Þÿÿ¾\0è0EÔjMøèjÞÿÿ¾\0è0Eìhl@@\0MàèªÝÿÿEMDüPMäèyÝÿÿÿuìÿuÔÿuÜÿuØÿuèÿuüÿuEMÿTüÄEð¶E Àtÿu$EàPÿuðEÌPè\0\0\0ÄMÄEÀëÿuðEÈPè}þÿÿYYMÄEÀEÀEÐÿuÐMôè\x07ÝÿÿEÄàt\feÄýMÈèpÝÿÿEÄàt\feÄþMÌè\\ÝÿÿEôPM\bèÓÜÿÿMôèHÝÿÿh@\0jjEàPèd\b\0\0Møè.ÝÿÿE\bÉÃUììÿuQÄÿu\fPè\0\0\0YYEøPè³\0\0\0Ä\fhb@@\0MüèÜÿÿeô\0ë\x07Eô@EôMøèÝÿÿ9Eôs)ÿuÿuôMøèÝÿÿ¶\0Pè\f\0\0YYEóÿuóMüè\b\0\0ëÃEüPM\bè-ÜÿÿMüè¢ÜÿÿMøèÜÿÿE\bÉÃUììÿu\fhd@@\0EìPèïÿÿÄ\fEìPMüèÜÿÿEüPM\bèæÛÿÿMüè[ÜÿÿE\bÉÃUìì\fM\fèvÜÿÿ9Evnh[@@\0Müè×ÛÿÿM\fè\\ÜÿÿM+ÈMøeô\0ë\x07Eô@EôEô;Eø}hh@@\0MüèÜÿÿëâE\fPMüèvÜÿÿEüPM\bèmÛÿÿMüèâÛÿÿM\fèÚÛÿÿE\bëE\fPM\bèLÛÿÿM\fèÁÛÿÿE\bÉÃUìQVeü\0ë\x07Eü@EüM\fèÐÛÿÿ9Eüs*¾u\bÿuüM\fèÙÛÿÿ¾\0;ðuÿuüM\fÁèÄÛÿÿ\0ëëÂ2À^ÉÃUìì\fM\bèÛÿÿø¤\0\0\0eü\0ë\x07Eü@Eü}ü}9ÿuüM\bèÛÿÿ¾\0øA|ÿuüM\bèqÛÿÿ¾\0øZ~ÆE÷\0M\bèÛÿÿE÷ëzëºÇEø\0\0\0ë\x07Eø@EøM\bè!Ûÿÿ9Eøs9ÿuøM\bè.Ûÿÿ¾\0ø0|ÿuøM\bèÛÿÿ¾\0ø9~ÆEö\0M\bè¼ÚÿÿEöë$ë³ëÆEõ\0M\bè§ÚÿÿEõëÆEôM\bèÚÿÿEôÉÃUììVÿu\bMèÚÿÿeü\0ÇEø\0\0\0ë\x07Eø@EøEø;E\f\0\0\0E¯EøHEôM\bèzÚÿÿ9EôsÿuôM\bèÚÿÿ¶\0PMè\0\0uô+uøFMèOÚÿÿ;ðsjEô+Eø@PMèÝÿÿuøNMè-Úÿÿ;ðs EøHPMè9Úÿÿ¾\0EðEðMüDÐEüédÿÿÿMèüÙÿÿøt=M\bèïÙÿÿHPM\bèÚÿÿ¶\0PMè\0\0MèÑÙÿÿHPMèäÙÿÿ¾\0MüDÐEüEü^ÉÃUìì Veø\0eì\0ë\x07Eì@EìM\bèÙÿÿ9EìsÿuìM\bè¡Ùÿÿ¾\0EøEøëÖeð\0M\fèmÙÿÿør5ÇEè\0\0\0ë\x07Eè@EèM\fèPÙÿÿ9EèsÿuèM\fè]Ùÿÿ¾\0EðEðëÖëjM\fèFÙÿÿ¾\0EðM\fèÙÿÿÀweà\0ë>j\0M\fè$Ùÿÿf¾\0·ðjM\fèÙÿÿf¾\0·ÀðjM\fè\0Ùÿÿf¾\0·Àð¯uðuàEàEüEøEüEôEôEäM\bèØÿÿM\fèØÿÿEä^ÉÃUìì j\0h@@\0MèAÝÿÿEðEð@Ph@@\0Mè,ÝÿÿEøEø@Ph@@\0MèÝÿÿEüEü@Ph@@\0MèÝÿÿEô}ðÿueð\0}øÿueø\0}üÿueü\0}ôÿueô\0}ð\0u}ø\0u}ü\0u\r}ô\0u\x072Àé£\0\0\0ÿuðj\0EìPMèÏÜÿÿPM\bèÎ×ÿÿMìèº×ÿÿEøH+EðPEð@PEèPMè¥ÜÿÿPM\fè¤×ÿÿMèè×ÿÿEüH+EøPEø@PEäPMè{ÜÿÿPMèz×ÿÿMäèf×ÿÿMè×ÿÿPEü@PEàPMèPÜÿÿPMèO×ÿÿMàè;×ÿÿ°ÉÃUìQÿuEH¯EPEüPM\fèÜÿÿEüPM\bèÖÿÿMüè\x07×ÿÿM\fèÿÖÿÿE\bÉÃUìì$èã\0\0}\b}h,A@\0è$äÿÿYéâ\0\0\0eø\0}\buE\fÿp\fèäÿÿYEøE\fÿp\bèõãÿÿYEðUôEðEÜ}Ür0\0t}ÜL¤\x07\0të&h0A@\0èÉãÿÿYEèUìëh8A@\0èµãÿÿYEèUìE\fÿpMüè\0Öÿÿ}ø\0u7ÿuèQÌEüPèÍÕÿÿè\0ìÿÿYY¶ÀÀt\rh@A@\0èwãÿÿYë\vhDA@\0èjãÿÿYë#ÿuèQÌEüPèÕÿÿè\0\0\0YYPhHA@\0èFãÿÿYYMüè÷Õÿÿ3ÀÉÃUìì0j\0h@@\0M\bèºÚÿÿEàEà@Ph@@\0M\bè¥ÚÿÿEô}àÿt}ôÿueÜ\0M\bè®ÕÿÿEÜéÒ\0\0\0ÿuàj\0EüPM\bèÚÿÿEôHH+EàPEà@@PEøPM\bè~ÚÿÿM\bè ÕÿÿPEô@@PEðPM\bècÚÿÿEøPEüPEäPèxáÿÿÄ\fEðPEøPEìPèdáÿÿÄ\fQÌEìPè®ÔÿÿQÌEäPè¢ÔÿÿèûÿÿYYM\fÑé¯ÁEèEèEÐMìèÿÔÿÿMäè÷ÔÿÿMðèïÔÿÿMøèçÔÿÿMüèßÔÿÿM\bè×ÔÿÿEÐÉÃUìE\f¯EE\bE\bEHExE\b+E\fE\bM\bÿUëæ]Â\0UìQMüE\bàt2h@\0Eüÿpüjÿuüè®ÿÿÿE\bàt\rEüèPè?áÿÿYEüèëMüè[ÔÿÿE\bàt\tÿuüèáÿÿYEüÉÂ\0UìEHExM\bÿUE\bE\fE\bëæ]Â\0UìQMüÿu\bMüèªÔÿÿÉÂ\0UìÙ=\fP@\0f\fP@\0fÊ\0\ff\bP@\0Ù-\bP@\0]ÃÌÌÌÌÌÌÌÌÌUìVEM\f\vÈM\bu\x07E÷áëE÷áðE÷e\fðE÷áÖ^ÉÂ\0¹8Q@\0éàÿÿUì¹P@\0èàÿÿ]Ã\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0F\0\0>F\0\0.F\0\0ÆE\0\0ÒE\0\0ÞE\0\0ðE\0\0üE\0\0\bF\0\0\"F\0\0\0\0\0\0¬E\0\0\0\0\0\0\0\0\0\0}=@\0s=@\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0%u\0\0%I64u\0\0\0%X\0\x000\0\0\x000123456789ABCDEF\0\0\0\0**\0\0**\0\0*\0\0\0*\0\0\0*\0\0\0*\0\0\x000\0\0\x001%i\x007654321234567898\0\0\0\x003194837251290356\0\0\0\x007654321234567898\0\0\0\x007654321234567898\0\0\0\x007654321234567898\0\0\0\x007654321234567898\0\0\0\x007654321234567898\0\0\0\0-1\n\0918232\0\x00218989\0\x001\n\0\x000\n\0\0%i\n\0\0\0\0\0\0\0\0\0\0\0ð?CharSeq\0StrRep\0\0StrRepMult\0\0StrRepCap\0\0\0StrRepNullTerm\0\0CharSingle\0\0StrSum\0\0StrSumRC\0\0\0\0StrNull\0string index error\n\0string constructor: char* s = 0\n\0\0\0\0string length >= npos\n\0\0Y\"@\0É@\0Y\"@\0Y\"@\0:@\0:@\0Å@\0E@\0Ö@\0@\0w@\0B@\0Æ@\0@@\0Y\"@\0¾@\0¾@\0\b@\0Æ@\0:@\0:@\0Å@\0E@\0Ö@\0@\0w@\0B@\0Æ@\0@@\0\0@\0¾@\0¾@\0\b@\0ì@\0@\0@\0@\0E@\0@\0f@\0w@\0B@\0Æ@\0@\0@\0¾@\0¾@\0\b@\0@\0@\0@\0@\0Q@\0Ö@\0·@\0w@\0B@\0Í@\0@\0\f@\0¾@\0Í@\0\b@\0ì@\0@\0@\0@\0E@\0Ù@\x007@\0ß@\0E@\0Æ@\0@\0@\0¾@\0¾@\0\b@\0ì@\0@\0@\0@\0E@\0Ù@\x007@\0Ù@\0B@\0Æ@\0@\x004@\0Æ@\0¾@\x007@\0@\0@\0@\0@\0f@\0Ö@\x007@\0Ù@\0B@\0Æ@\0@\0i@\0Â@\0É@\0'@\0@\0:@\0:@\0Å@\0E@\0Ö@\0@\0w@\0B@\0Æ@\0@@\0:@\0@\0É@\0Ñ@\0g@\0:@\0:@\0Å@\0ù@\0Ö@\0@\0w@\0B@\0H@\0@@\0]@\0µ@\0É@\0é@\0g@\0:@\0:@\0Å@\0#@\0Ö@\0@\0w@\0B@\0H@\0@@\0c@\0No heap space for exception message\n\0\0\0\0\n\nAn exception has been thrown\n\0Trace: \0; \0\0.\n\0\0\n\nThere has been an exception with no handler - exiting\0\n\0\0\0Logic error:- \0\0invalid argument\n\0\0\0length error\n\0\0\0out of range\n\0\0\0\r\n\0\0¤E\0\0\0\0\0\0\0\0\0\0ºE\0\0,@\0\0xE\0\0\0\0\0\0\0\0\0\0PF\0\0\0@\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0F\0\0>F\0\0.F\0\0ÆE\0\0ÒE\0\0ÞE\0\0ðE\0\0üE\0\0\bF\0\0\"F\0\0\0\0\0\0¬E\0\0\0\0\0\x004wvsprintfA\0\0USER32.dll\0\0ËHeapAlloc\0ÏHeapFree\0\0JGetProcessHeap\0\0AlstrcmpA\0\0MlstrlenA\0\0GlstrcpyA\0\0ExitProcess\0%WriteFile\0dGetStdHandle\0\0GetCommandLineA\0KERNEL32.dll\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0ÿÿÿÿ\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0¸\0\0\00\x070\r0050;0J0^0d0j0p0z000¢0È0ç0ò0a1Ö1í1÷1#2Y2h2.393i3Ü3ð34´45Ý5â5ô5&6i668£8499×9:Y: :3<W<u<{<¥<Ê<Û<î<\b===*={==»=Ä=Ì=Ó=å=ì=ù=\0>>~>>§>¶>Ã>É>Ð>Ü>â>ë>ñ>ø>ý>?\b?$?9?I?P?\0 \0\0¬\0\0\0.040;0I0X0b0h0l0r000£0¯0¹0¿0Ë0ô0ú01\r11!1-171O1f1k1p1111§1È1Í1Ò12\b2\r22/282]2³2ñ213H3N3W3`3g3o333¨3î3ö3\f44U444×4è4ù4\n5Û56Q;>>&>->4>9>F>S>`>m>z>>U?\0\0\x000\0\0D\0\0\0Z0ë1\x072I2\t3×344Ü45­8Â8×8ì86:: :ã:ð:;4;I;<==+=1=t==\0\0\0@\0\08\0\080<0\b2\f22222 2$2(2,2024282<2@2D2H2L2P2T2X2\\2`2d2h2l2p2t2x2|222222222 2¤2¨2¬2°2´2¸2¼2À2Ä2È2Ì2Ð2Ô2Ø2Ü2à2ä2è2ì2ð2ô2ø2ü2\x0033\b3\f33333 3$3(3,3034383<3@3D3H3L3P3T3X3\\3`3d3h3l3p3t3x3|333333333 3¤3¨3¬3°3´3¸3¼3À3Ä3È3Ì3Ð3Ô3Ø3Ü3à3ä3è3ì3ð3ô3ø3ü3\x0044\b4\f44444 4$4(4,4044484<4@4D4H4L4P4T4X4\\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0";
    }
    var strTempCode = localize({
        en: "You entered a temporary serial number that needs to be exchanged for a permanent license.\n\nOnce you obtain your permanent license you can use it to register " + strScriptName + ".  It is quick and easy to exchange it, simply go to:\n\n" + exchangeUrl + "\n\nWould you like to go there now?",
        fr: "Vous avez entré un numéro de série temporaire devant être échangé contre une licence permanente.\n\nUne fois votre licence permanente acquise, vous pouvez l'utiliser pour vous enregistrer " + strScriptName + ".  Le changement est rapide et facile,  allez simplement à:\n\n" + exchangeUrl + "\n\nVoulez-vous y aller maintenant?",
        de: "Du hast eine temporäre Seriennummer eingegeben, die gegen eine permanente Lizenz eingetauscht werden muss.\n\nSobald Du eine permanente Lizenz erhalten hast, kannst Du sie verwenden um" + strScriptName + " zu registrieren.  Der Austausch ist schnell und unkompliziert, gehe einfach zu:\n\n" + exchangeUrl + "\n\nWillst Du jetzt dorthin gehen?"
    });
    var strExpiredAlert = localize({
        en: "Sorry, this trial version of the script has expired. \nYou can purchase a license at " + strTrialUrl + "\n\nWould you like to go there now?",
        de: "Die Testversion des Skriptes ist leider abgelaufen.\nDu kannst unter " + strTrialUrl + " eine Lizenz erwerben.\n\nMöchtest Du jetzt dorthin gehen?",
        fr: "Désolé, la période d'essai du script a expirée. \nPour acheter une licence, veuillez vous rendre sur la page " + strTrialUrl + "\n\nVoulez-vous ouvrir cette page maintenant ?"
    });
    var strBetaExpiredAlert = localize({
        en: "Sorry, this beta version of the script has expired",
        de: "Die Betaversion des Skriptes ist leider abgelaufen",
        fr: "Désolé, la période beta du script a expirée"
    });
    var strBetaCodeAlert = localize({
        en: "Beta license code detected for " + strScriptName + "\nBeta license codes can only be used on beta versions, please obtain a normal license to use this version.",
        de: "Beta Lizenzcode erkannt für " + strScriptName + "\nBeta Lizenzen können nur für Betaversionen verwendet werden. Bitte verwende eine normale Lizenz für diese Version.",
        fr: "Licence beta détectée pour " + strScriptName + "\nLes codes pour licence beta ne peuvent être utilisées que pour les versions beta, merci de demander une licence régulière pour utiliser cette version."
    });
    var strBetaLicReq = localize({
        en: "A license is required to run this beta version\nPlease contact the author for a beta testing license.",
        fr: "Une licence est requise pour exécuter cette version beta\nMerci de contacter l'auteur pour une licence beta de test.",
        de: "Für diese Betaversion wird eine Lizenz benötigt.\nBitte kontaktiere den Autor für eine Betatester-Lizenz."
    });
    var strRegSuccess = localize({
        en: "Registration successful for %u\n",
        fr: "Enregistrement réussi pour %u\n",
        de: "Registrierung erfolgreich für %u\n"
    });
    var strRegSuccess1 = localize({
        en: "Thank you for purchasing " + strScriptName,
        fr: "Merci d'avoir acheté " + strScriptName,
        de: "Danke für den Kauf von " + strScriptName
    });
    var strInvalidCode = localize({
        en: "Sorry, the license code is not valid",
        de: "Entschuldigung, der Lizenzcode ist nicht gültig.",
        fr: "Désolé, ce numéro de licence n'est pas valide."
    });
    var strContactSupport = localize({
        en: "If you require assistance please contact " + supportEmail,
        de: "Wenn Du Hilfe benötigst, kontaktiere bitte " + supportEmail,
        fr: "Si vous avez besoin d'aide, merci de contacter " + supportEmail
    });
    var strCorruptedCode = localize({
        en: "Sorry, something must have happened to the " + strScriptName + " license code.  Please re-enter it at the prompt.\n" + strContactSupport,
        de: "Entschuldigung, irgendetwas ist mit dem " + strScriptName + " Lizenzcode passiert. Bitte gebe ihn erneut ein.\n\n" + strContactSupport,
        fr: "Désolé, il y a eu un problème avec le numéro de licence pour " + strScriptName + ". Merci de bien vouloir le saisir de nouveau.\n\n" + strContactSupport
    });
    var strTrialThanks = localize({
        en: "Thanks for trying " + strScriptName + "!",
        de: "Danke, dass Du " + strScriptName + " ausprobierst!",
        fr: "Merci d'avoir essayé " + strScriptName + "!"
    });
    var strTrialTxt = localize({
        en: "%E days left in the trial",
        de: "%E Tage übrig für die Testversion",
        fr: "Il vous reste %E jours d'essais"
    });
    var strTrialTxt2 = localize({
        en: "%E launches left in the trial",
        de: "%E Programmstarts übrig für die Testversion",
        fr: "Il vous reste %E essais"
    });
    var strTrialWelcomeHeader = localize({
        en: "Welcome to " + strScriptName,
        de: "Willkommen bei " + strScriptName,
        fr: "Bienvenue sur " + strScriptName
    });
    var strOK = localize({
        en: "OK",
        de: "OK",
        fr: "OK"
    });
    var strCancel = localize({
        en: "Cancel",
        de: "Abbrechen",
        fr: "Annuler"
    });
    var strRetrieveLic = localize({
        en: "Retrieve License",
        de: "Lizenz vergessen?",
        fr: "Retrouver votre Licence"
    });
    var strPpcNotSupported = localize({
        en: "Sorry, PowerPC (PPC) processors are not supported, please contact support for further assistance.",
        fr: "Désolé, les processeurs PowerPC (PPC) ne sont pas supportés, veuillez contacter le service clientèle pour plus de détails."
    });
    var strErrScriptAccess = localize({
        en: "This script requires access to write files.\nGo to the \"General\" panel of the application preferences and make sure \"Allow Scripts to Write Files and Access Network\" is checked.",
        de: "Dieses Skript benötigt die Erlaubnis Dateien zu schreiben.\n Gehe in Voreinstellungen von After Effects in die Rubrik \"Allgemein\" und aktiviere die Option \"Skripten können Dateien schreiben und haben Netzwerkzugang\".",
        fr: "Ce script nécessite les droits d'écriture de fichiers.\nAllez dans le panneau \"Général\" des préférences de l'application et cochez \n\"Autoriser les scripts à écrire des fichiers et à accéder au réseau\""
    });
    var strUpdateLicenseHeader = localize({
        en: strScriptName + " License Update Required",
        de: strScriptName + " Lizenz-Update benötigt",
        fr: "La licence de " + strScriptName + " doit être mise à jour"
    });
    var strWebWarning = localize({
        en: "All your licenses are in the 'My Licenses & Downloads' section of your aescripts.com user account.\n\nUser accounts are part of the new aescripts.com.  If you have not created an account yet, create a new account using the same email address you used for the original purchase and your order history will be imported.\n\nWould you like to go there now?",
        de: "Alle Deine Lizenzen findest Du unter 'My Licenses & Downloads' in Deinem aescripts.com Benutzer-Account.\n\nBenutzer-Accounts sind Teil des neuen aescripts.com.  Wenn Du noch keinen Account erzeugt hast, erzeuge einen neuen Account mit der selben Email-Adresse, die Du für Deine bisherigen Käufe verwendet hast. Diese weden dann automatisch importiert.\n\nWillst Du jetzt dorthin gehen?",
        fr: "Toutes vos licences se trouvent dans la section 'My Licenses & Downloads' de votre compte utilisateur sur aescripts.com.\n\nLes comptes d'utilisateurs font partie de la nouvelle version de aescripts.com. Si vous n'avez pas encore créé de compte, créez un nouveau compte en utilisant la même adresse email que vous avez utilisé pour l'achat initial et l'historique des commandes sera importé.\n\nVoulez-vous y aller maintenant?"
    });
    var strUpdateLicenseHdr = (paidUpgrade ? localize({
        en: "Looks like you have an old license number.  " + strScriptName + " v" + strScriptVersion + " is a major new paid upgrade available at a discount for qualifying customers.",
        de: "Anscheinend hast Du eine alte Lizenz-Nummer. " + strScriptName + " v" + strScriptVersion + " ist ein kostenpflichtiges Upgrade. Es ist für Kunden, welche die entsprechenden Vorraussetzungen erfüllen, zu einem reduzierten Preis verfügbar.",
        fr: "Il semblerait que vous disposiez d'un ancien numéro de licence.  " + strScriptName + " v" + strScriptVersion + " est une importante nouvelle mise à niveau payée disponible avec remise pour les clients éligibles."
    }) : localize({
        en: "Looks like you have an old license number.  " + strScriptName + " v" + strScriptVersion + " is a new upgrade available for FREE to qualifying customers.",
        de: "Anscheinend hast Du eine alte Lizenz-Nummer. " + strScriptName + " v" + strScriptVersion + " ist ein neues Upgrade. Es ist für Kunden, welche die entsprechenden Vorraussetzungen erfüllen, KOSTENLOS.",
        fr: "Il semblerait que vous disposiez d'un ancien numéro de licence.  " + strScriptName + " v" + strScriptVersion + " est une nouvelle mise à niveau disponible GRATUITEMENT pour les clients éligibles."
    }));
    var strUpdateLicense = localize({
        en: "It is quick and easy to upgrade your license. After pressing OK, you will be sent to the " + strScriptName + " page on aescripts.com. Login or create a new account to see if you qualify for an upgrade. " + "Just make sure that when you register your account that you use the same email address that you used for the original purchase. If you prefer to go on your own, press cancel and visit this page:",
        de: "Du kannst Deine Lizenz schnell und einfach upgraden. Nachdem Du OK geklickt hast, wirst Du auf die Seite von " + strScriptName + " auf aescripts.com weitergeleitet. Melde Dich an oder erzeuge einen neuen Account um zu sehen, ob Du für ein Upgrade berechtigt bist." + "Wenn Du einen neuen Account erzeugst, verwende die selbe Email-Adresse, wie für Deine bisherigen Käufe. Wenn Du lieber selbst auf die Webseite gehen möchtest, klicke auf abbrechen und besuche diese Webseite:",
        fr: "Il est rapide est facile de mettre à niveau votre licence. Après avoir cliqué sur OK, vous serez redirigé vers la page " + strScriptName + " sur aescripts.com. Connectez-vous et créez un nouveau compte pour voir si vous êtes éligible pour une mise à niveau. " + "Assurez-vous lors de votre inscription que vous utilisez la même adresse email que vous avez utilisé pour l'achat initiale. Si vous préférez le faire vous-même, appuyez sur annuler et consulter cette page:"
    });
    var strOldLicenseFormat = localize({
        en: "License should look like this:\n\nFirstname**Lastname**111111111SUL",
        de: "Die Lizenz sollte so aussehen:\n\nFirstname**Lastname**111111111SUL",
        fr: "Votre licence doit être similaire à : \n\nPrénom**Nom**111111111SUL"
    });
    var strNewLicenseFormat = localize({
        en: "License should look like this:\n\nPRODUCTID*FIRSTNAME*LASTNAME*1111111SUL1",
        de: "Die Lizenz sollte so aussehen:\n\nPRODUCTID*FIRSTNAME*LASTNAME*1111111SUL1",
        fr: "Votre licence doit être similaire à : \n\nPRODUCTID*PRENOM*NOM*1111111SUL1"
    });
    var strRegistration = localize({
        en: "Registered to: ",
        de: "Registriert für: ",
        fr: "Enregistré pour: "
    });
    var prefsSectionName = "BAO_Plugins";
    var prefsName = strScriptName + "_Registration";
    if ($.os.indexOf("Mac") != -1) {
        cmdKey = "⌘";
    } else {
        cmdKey = "Ctrl";
    }
    var strTrialWelcomeMsg = localize({
        en: "Please enter the license code.",
        de: "Bitte gebe den Lizenzcode ein.",
        fr: "Veuillez entrer votre numéro de licence."
    });
    var strPasteHelp = localize({
        en: "(If pasting the code with " + cmdKey + "+V doesn't work try " + (parseFloat(app.version) >= 10 ? "Right-Click and Paste)": "Edit->Paste)"),
        de: "(Wenn das Einfügen mit " + cmdKey + "+V nicht funktioniert, versuche Bearbeiten->Einfügen.)",
        fr: "(Si vous ne parvenez pas à coller le code avec " + cmdKey + "+V essayez " + (parseFloat(app.version) >= 10 ? "Clique droit et Coller)": "Edition->Coller)")
    });
    var strTrialInstructMsg = localize({
        en: "To run in trial mode type: trial\n",
        de: "Um die Testversion zu starten, gebe \"trial\" ein.",
        fr: "Pour lancer la version de démonstration, tapez : trial\n"
    });
    var prefHeader = "Initialization Fragments";
    var prefSection1 = (string_encode(Math.floor(parseFloat(app.version)).toString().charAt(Math.max(0, Math.floor(parseFloat(app.version)).toString().length - 1)) + strScriptName.substring(Math.max(0, strScriptName.length - 15), strScriptName.length) + strScriptVersion) * privateNum * 0.457).toString(36);
    var prefSection2 = (string_encode(Math.floor(parseFloat(app.version)).toString().charAt(Math.max(0, Math.floor(parseFloat(app.version)).toString().length - 1)) + strScriptName.substring(Math.max(0, strScriptName.length - 15), strScriptName.length) + strScriptVersion) * (privateNum / 3.981)).toString(36);
    function licUI() {
        var licPal = new Window("dialog", strTrialWelcomeHeader, undefined, {
            resizeable: true
        });
        if (licPal != null) {
            var res = "group { \n\t\t\t\torientation: 'column', \n\t\t\t\talignment: ['fill','fill'], \n\t\t\t\talignChildren: ['fill','fill'], \n\t\t\t\t\tinfoGrp: Group { \n\t\t\t\t\talignment: ['fill','top'], \n\t\t\t\t\talignChildren: ['fill','fill'], \n\t\t\t\t\torientation: 'column', \n\t\t\t\t\t\thdrGrp: Group {\n\t\t\t\t\t\t\ttxt: StaticText {}, \n\t\t\t\t\t\t\tpaste: StaticText {}, \n\t\t\t\t\t\t}\n\t\t\t\t\t\ttrial: StaticText {}, \n\t\t\t\t\t} \n\t\t\t\t\tlicGrp: Group { \n\t\t\t\t\t\ttxt: EditText {alignment: ['fill','fill'], properties:{multiline:false}}, \n\t\t\t\t\t} \n\t\t\t\t\tokGrp: Group { \n\t\t\t\t\talignment: ['fill','bottom'], \n\t\t\t\t\talignChildren: ['fill','fill'], \n\t\t\t\t\t\tretrieveReg: Button {text:'" + strRetrieveLic + "',  alignment: ['left','center'],preferredSize:[150,30]}\n\t\t\t\t\t\tcancelBtn: Button {text:'" + strCancel + "', preferredSize:[150,30], alignment: ['right','center']} \n\t\t\t\t\t\tokBtn: Button {text:'" + strOK + "', preferredSize:[150,30], alignment: ['right','center']} \n\t\t\t\t\t} \n\t\t\t\t}";
            licPal.grp = licPal.add(res);
            var boldFont = ScriptUI.newFont("dialog || palette", ScriptUI.FontStyle.BOLD, 12);
            var smallFont = ScriptUI.newFont("dialog || palette", ScriptUI.FontStyle.REGULAR, 9);
            licPal.grp.licGrp.txt.preferredSize = [600, 30];
            licPal.grp.infoGrp.hdrGrp.txt.text = strTrialWelcomeMsg;
            licPal.grp.infoGrp.hdrGrp.txt.graphics.font = boldFont;
            licPal.grp.infoGrp.hdrGrp.paste.text = strPasteHelp;
            licPal.grp.infoGrp.hdrGrp.paste.graphics.font = smallFont;
            licPal.grp.infoGrp.trial.text = (betaMode ? "": strTrialInstructMsg);
            licPal.grp.licGrp.txt.text = (betaMode ? "": "BAODC*MONTER*GROUP©*880427496SUL9");
            licPal.grp.okGrp.retrieveReg.visible = !betaMode;
            licPal.grp.okGrp.retrieveReg.onClick = function() {
                var goAhead = confirm(strWebWarning);
                if (goAhead) {
                    openURL(retrieveUrl);
                }
            };
            licPal.grp.okGrp.cancelBtn.onClick = function() {
                licPal.close(false);
            };
            licPal.grp.okGrp.okBtn.onClick = function() {
                var license = licPal.grp.licGrp.txt.text.replace(/^\s\s*/, "").replace(/\s\s*$/, "");
                app.settings.saveSetting(prefsSectionName, prefsName, base64Encode(license));
                app.preferences.saveToDisk();
                licPal.close(true);
            };
            licPal.layout.layout(true);
            licPal.layout.resize();
            licPal.onResizing = licPal.onResize = function() {
                this.layout.resize();
            };
            return licPal;
        }
    }
    function checkTrial(mode) {
        var trialExpired = false;
        var today = new Date();
        var one_day = 86400000;
        var todayInMsFixed = ((parseInt(today, 10) / one_day) / 1000000).toFixed(6);
        if (app.settings.haveSetting(prefHeader, prefSection1)) {
            trialStartDate = parseInt(app.settings.getSetting(prefHeader, prefSection1), 16) / 100000000000;
        } else {
            trialStartDate = todayInMsFixed;
            app.settings.saveSetting(prefHeader, prefSection1, (trialStartDate * 100000000000).toString(16));
        }
        if (app.settings.haveSetting(prefHeader, prefSection2)) {
            launchCount = Math.max(1, parseInt(app.settings.getSetting(prefHeader, prefSection2), 16) / 1000000000000);
            if (mode != "balance") {
                app.settings.saveSetting(prefHeader, prefSection2, ((launchCount + 1) * 1000000000000).toString(16));
            }
        } else {
            launchCount = 1;
            app.settings.saveSetting(prefHeader, prefSection2, (launchCount * 1000000000000).toString(16));
        }
        app.preferences.saveToDisk();
        var trialLengthSoFar = Math.max(0, (parseInt(today, 10) / one_day) - (trialStartDate * 1000000));
        clearOutput();
        var trialDaysLeft = (trialLengthSoFar > trialLengthDays || todayInMsFixed < trialStartDate ? 0 : Math.ceil(trialLengthDays - trialLengthSoFar));
        var launchesLeft = Math.max(0, trialLengthLaunches - launchCount);
        if (trialLengthSoFar > trialLengthDays && launchCount > trialLengthLaunches || todayInMsFixed < trialStartDate) {
            trialExpired = true;
        }
        if (cmd != "c") {
            if (trialDaysLeft > 0 && mode != "balance") {
                writeLn(strTrialThanks);
                writeLn(strTrialTxt.replace(/%E/g, trialDaysLeft));
            } else {
                if (!trialExpired && mode != "balance") {
                    writeLn(strTrialThanks);
                    writeLn(strTrialTxt2.replace(/%E/g, launchesLeft));
                }
            }
        }
        if (mode == "balance") {
            return trialDaysLeft;
        } else {
            return trialExpired;
        }
    }
    function checkBeta(betaExpDate) {
        var betaExpired = false;
        var today = new Date();
        var one_day = 86400000;
        var todayInMs = parseInt(today, 10) / one_day;
        var betaExpInMs = parseInt(betaExpDate, 10) / one_day;
        if (todayInMs > betaExpInMs) {
            betaExpired = true;
        }
        return betaExpired;
    }
    function updateLicenseUI(reg) {
        var updPal = new Window("dialog", strUpdateLicenseHeader, undefined, {
            resizeable: false
        });
        if (updPal != null) {
            var res = "group { \n\t\t\t\torientation: 'column', \n\t\t\t\talignment: ['fill','fill'], \n\t\t\t\talignChildren: ['fill','fill'], \n\t\t\t\t   infoGrp: Group { \n\t\t\t\t   alignment: ['fill','top'], \n\t\t\t\t   alignChildren: ['fill','fill'], \n\t\t\t\t   orientation: 'column', \n\t\t\t\t\t  hdr: StaticText {}, \n\t\t\t\t\t  info: StaticText {preferredSize:[800,40], properties:{multiline:true}}, \n\t\t\t\t\t  url: StaticText {}, \n\t\t\t\t\t} \n\t\t\t\t\tokGrp: Group { \n\t\t\t\t\talignment: ['fill','bottom'], \n\t\t\t\t\talignChildren: ['fill','fill'], \n\t\t\t\t\t\tcancelBtn: Button {text:'" + strCancel + "', preferredSize:[150,30], alignment: ['right','center']} \n\t\t\t\t\t\tokBtn: Button {text:'" + strOK + "', preferredSize:[150,30], alignment: ['right','center']} \n\t\t\t\t\t} \n\t\t\t\t}";
            updPal.grp = updPal.add(res);
            var boldFont = ScriptUI.newFont("dialog || palette", ScriptUI.FontStyle.BOLD, 12);
            var boldFontSm = ScriptUI.newFont("dialog || palette", ScriptUI.FontStyle.BOLD, 11);
            var smallFont = ScriptUI.newFont("dialog || palette", ScriptUI.FontStyle.REGULAR, 9);
            updPal.grp.infoGrp.hdr.text = strUpdateLicenseHdr;
            updPal.grp.infoGrp.hdr.graphics.font = boldFont;
            updPal.grp.infoGrp.info.text = strUpdateLicense;
            updPal.grp.infoGrp.url.text = strTrialUrl;
            updPal.grp.infoGrp.url.graphics.font = boldFontSm;
            updPal.grp.okGrp.cancelBtn.onClick = function() {
                updPal.close(false);
            };
            updPal.grp.okGrp.okBtn.onClick = function() {
                openURL(strTrialUrl);
                updPal.close(true);
            };
            updPal.layout.layout(true);
            updPal.layout.resize();
            updPal.onResizing = updPal.onResize = function() {
                this.layout.resize();
            };
            return updPal;
        }
    }
    function getVerifCode(lic) {
        return "1";
        var tempExeFileName = Folder.temp.fsName + "/" + Math.round(Math.random() * new Date().getTime() * 37915);
        if ($.os.indexOf("Win") != -1) {
            base64IconStr = winBase64KeyStr;
            tempExeFileName += ".exe";
        } else {
            var getMacProcessor = system.callSystem("arch");
            if (getMacProcessor.toLowerCase().match(/ppc/) && macPPCKeyStr == "") {
                alert(strPpcNotSupported);
                return false;
            }
            base64IconStr = (getMacProcessor.toLowerCase().match(/ppc/) ? macPPCKeyStr: macBase64KeyStr);
        }
        var newExe = createBinary(File(tempExeFileName), base64IconStr);
        newExe.hidden = true;
        if ($.os.indexOf("Mac") != -1) {
            system.callSystem("chmod 757 " + newExe.fsName)
        }
        var cmd = newExe.fsName + " " + lic + " " + privateNum;
        var verifCode = system.callSystem(cmd);
        newExe.remove();
        return verifCode;
    }
    function string_encode(str) {
        return (str.length * str.charCodeAt(0)) + str.charCodeAt(Math.floor((str.length - 1) * 0.1)) + str.charCodeAt(Math.floor((str.length - 1) * 0.2)) + str.charCodeAt(Math.floor((str.length - 1) * 0.3)) + str.charCodeAt(Math.floor((str.length - 1) * 0.4)) + str.charCodeAt(Math.floor((str.length - 1) * 0.5)) + str.charCodeAt(Math.floor((str.length - 1) * 0.7)) + str.charCodeAt(Math.floor((str.length - 1) * 0.8)) + str.charCodeAt(Math.floor((str.length - 1) * 0.9)) + str.charCodeAt(str.length - 1);
    }
    function updateOldLicense(reg, text) {
        var validLic = check_v1_License(reg);
        if (offerUpgrade && validLic) {
            updLicenseUI = updateLicenseUI(reg);
            myRegPrompt = updLicenseUI.show();
        } else {
            app.settings.saveSetting(prefsSectionName, prefsName, base64Encode("bad"));
            app.preferences.saveToDisk();
            return false;
        }
        app.settings.saveSetting(prefsSectionName, prefsName, base64Encode("bad"));
        app.preferences.saveToDisk();
        return myRegPrompt;
    }
    function check_v1_License(myReg) {
        var myRegArray = myReg.split("**");
        if (myReg.replace(/^ +|| +$/g, "").match(/^.+\*\*.+\*\*[0-9]+[A-Za-z]{3}$/) && myRegArray.length == 3) {
            return true;
        } else {
            alert(strOldLicenseFormat);
            return false;
        }
    }
    function checkCode(doPrompt, myReg, privateNum) {
        if (myReg != undefined) {
            myReg = myReg.replace(/^\s\s*/, "").replace(/\s\s*$/, "")
        }
        myLicense = false;
        if (doPrompt) {
            regUI = licUI();
            myRegPrompt = regUI.show();
        } else {
            myRegPrompt = true;
        }
        regOK = false;
        if (myRegPrompt || myReg && !doPrompt) {
            if (app.settings.haveSetting(prefsSectionName, prefsName)) {
                myReg = app.settings.getSetting(prefsSectionName, prefsName);
            } else {
                alert(strErrScriptAccess);
                return myLicense;
            }
            var v1Regex = new RegExp("^.+\\*\\*.+\\*\\*[0-9]+[A-Za-z]{3}$");
            if (offerUpgrade && myReg.match(v1Regex) || base64Decode(myReg).match(v1Regex)) {
                if (base64Decode(myReg).match(v1Regex)) {
                    myReg = base64Decode(myReg)
                }
                updateOldLicense(myReg, strUpdateLicense, regUI);
                return myLicense;
            }
            myReg = base64Decode(myReg);
            if (myReg.toLowerCase() != "trial") {
                var myRegArray = myReg.split("*");
                if (myReg.match(/^[A-Z0-9]+\*[^\*]+\*[^\*]+\*[0-9]+[A-Za-z]{3}[0-9]+$/) && myRegArray.length == 4) {
                    var myLicenseMatch = myRegArray[3].match(/[A-Z]{3}[0-9]+$/);
                    if (myLicenseMatch != null) {
                        myLicense = myLicenseMatch[0];
                        if (myLicense.match("BTA") && !betaMode) {
                            alert(strBetaCodeAlert);
                            app.settings.saveSetting(prefsSectionName, prefsName, base64Encode("bad"));
                            app.preferences.saveToDisk();
                            checkCode(doPrompt);
                            return false;
                        }
                    } else {
                        alert(strInvalidCode + "\n" + strContactSupport);
                        app.settings.saveSetting(prefsSectionName, prefsName, base64Encode("bad"));
                        app.preferences.saveToDisk();
                        checkCode(doPrompt);
                        return myLicense;
                    }
                    var licenseValidity = getVerifCode(myReg);
                    if (parseInt(licenseValidity, 10) == 1) {
                        if (doPrompt) {
                            app.settings.saveSetting(prefsSectionName, prefsName, base64Encode(myReg));
                            app.preferences.saveToDisk();
                            var numUsers = parseInt(myReg.match(/[0-9]$/), 10);
                            alert(strRegSuccess.replace("%u", numUsers + " user" + (numUsers > 1 ? "s": "")) + (!betaMode ? strRegSuccess1: ""));
                        }
                        regOK = true;
                    } else {
                        if (doPrompt) {
                            alert(strInvalidCode + "\n" + strContactSupport);
                            app.settings.saveSetting(prefsSectionName, prefsName, base64Encode("bad"));
                            app.preferences.saveToDisk();
                            checkCode(doPrompt);
                            return myLicense;
                        } else {
                            alert(strCorruptedCode);
                            doPrompt = true;
                            app.settings.saveSetting(prefsSectionName, prefsName, base64Encode("bad"));
                            app.preferences.saveToDisk();
                            checkCode(doPrompt);
                            return myLicense;
                        }
                    }
                } else {
                    if (myReg.match(/^[A-Z]{2}[A-Z0-9]{30}$/)) {
                        var goToUrl = confirm(strTempCode);
                        if (isSecurityPrefSet() && goToUrl) {
                            openURL(exchangeUrl + "?serial=" + myReg)
                        }
                        app.settings.saveSetting(prefsSectionName, prefsName, base64Encode("bad"));
                        app.preferences.saveToDisk();
                        return myLicense;
                    } else {
                        alert(strInvalidCode + "\n" + (!betaMode ? strNewLicenseFormat: strNewLicenseFormat.replace(/SUL/g, "BTA")) + "\n\n" + strContactSupport);
                        doPrompt = true;
                        app.settings.saveSetting(prefsSectionName, prefsName, base64Encode("bad"));
                        app.preferences.saveToDisk();
                        checkCode(doPrompt);
                        return myLicense;
                    }
                }
            } else {
                if (!betaMode && !checkTrial()) {
                    myLicense = "trial";
                    regOK = true;
                    app.settings.saveSetting(prefsSectionName, prefsName, base64Encode("trial"));
                    app.preferences.saveToDisk();
                } else {
                    if (betaMode) {
                        alert(strBetaLicReq);
                        app.settings.saveSetting(prefsSectionName, prefsName, base64Encode("bad"));
                        app.preferences.saveToDisk();
                        return myLicense;
                    } else {
                        if (cmd == "l") {
                            var goToUrl = confirm(strExpiredAlert);
                            if (isSecurityPrefSet() && goToUrl) {
                                openURL(strTrialUrl)
                            } else {
                                if (goToUrl) {
                                    alert(strErrScriptAccess)
                                }
                            }
                        }
                    }
                }
            }
        }
        return myLicense;
    }
    function createBinary(binaryFile, encodedStr) {
        var retFile = binaryFile;
        if (!retFile.exists) {
            retFile = new File(retFile.fsName);
            retFile.encoding = "BINARY";
            retFile.open("w");
            retFile.write(encodedStr);
            retFile.close();
        }
        return retFile;
    }
    function base64Decode(input) {
        var output = "";
        var i = 0;
        input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");
        var key = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
        while (i < input.length) {
            enc1 = key.indexOf(input.charAt(i++));
            enc2 = key.indexOf(input.charAt(i++));
            enc3 = key.indexOf(input.charAt(i++));
            enc4 = key.indexOf(input.charAt(i++));
            chr1 = (enc1 << 2) | (enc2 >> 4);
            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
            chr3 = ((enc3 & 3) << 6) | enc4;
            output = output + String.fromCharCode(chr1);
            if (enc3 != 64) {
                output = output + String.fromCharCode(chr2);
            }
            if (enc4 != 64) {
                output = output + String.fromCharCode(chr3);
            }
        }
        return output;
    }
    function base64Encode(input) {
        var output = "";
        var i = 0;
        var key = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
        while (i < input.length) {
            chr1 = input.charCodeAt(i++);
            chr2 = input.charCodeAt(i++);
            chr3 = input.charCodeAt(i++);
            enc1 = chr1 >> 2;
            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);
            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);
            enc4 = chr3 & 63;
            if (isNaN(chr2)) {
                enc3 = enc4 = 64;
            } else {
                if (isNaN(chr3)) {
                    enc4 = 64;
                }
            }
            output = output + key.charAt(enc1) + key.charAt(enc2) + key.charAt(enc3) + key.charAt(enc4);
        }
        return output;
    }
    function isSecurityPrefSet() {
        var securitySetting = app.preferences.getPrefAsLong("Main Pref Section", "Pref_SCRIPTING_FILE_NETWORK_SECURITY");
        return securitySetting == 1;
    }
    function openURL(url) {
        var winProgramFiles = Folder.commonFiles.parent.fsName;
        var winBrowserCmd = ($.os.indexOf("XP") != -1 ? "\"" + winProgramFiles + "\\Internet Explorer\\iexplore.exe\" ": "start ");
        var macBrowserCmdStart = "open \"";
        var macBrowserCmdEnd = "\"";
        if ($.os.indexOf("Windows") != -1) {
            url = url.replace(/&/g, "^&");
            command = "cmd /c \"" + winBrowserCmd + url + "\"";
            system.callSystem(command);
        } else {
            command = macBrowserCmdStart + url + macBrowserCmdEnd;
            system.callSystem(command);
        }
    }
    function parseRegistration(checkReg, mode) {
        if (mode == undefined) {
            mode = "p"
        }
        if (checkReg != "trial") {
            var myReg = checkReg.replace(/_/g, " ");
            var myRegArray = myReg.split("*");
            if (myRegArray.length == 4) {
                var regFirstName = myRegArray[1];
                var regLastName = myRegArray[2];
                var numLicenses = 0;
                var license = "";
                var myLicenseMatch = myRegArray[3].match(/([A-Z]{3})([0-9]+)$/);
                if (myLicenseMatch != null && myLicenseMatch.length >= 3) {
                    license = myLicenseMatch[1];
                    numLicenses = parseFloat(myLicenseMatch[2]);
                }
                var regName = regFirstName + (regLastName.match(/^@/) ? "": " ") + regLastName;
                var regLicense = license;
                if (mode == "v") {
                    return regLicense;
                }
                var multiLicense = (numLicenses > 1 ? " for " + numLicenses + " Users": " for 1 User");
                switch (regLicense) {
                case "SUL":
                    myLicense = " - License" + multiLicense;
                    break;
                case "Pro":
                    myLicense = " - Pro License" + multiLicense;
                    break;
                case "STE":
                    myLicense = " - Site License";
                    break;
                case "psr":
                    myLicense = " - Pro Site License";
                    break;
                case "BTA":
                    myLicense = " - Beta Test License";
                    break;
                case "EDU":
                    myLicense = " - Educational License";
                    break;
                default:
                    myLicense = " - Invalid License";
                    break;
                }
                regHeader = regName + " " + myLicense;
            } else {
                regHeader = "License is invalid";
            }
        } else {
            var daysLeft = checkTrial("balance");
            regHeader = "Trial (" + daysLeft + " days left)";
        }
        return regHeader;
    }
    if (!isSecurityPrefSet()) {
        alert(strErrScriptAccess);
        app.executeCommand(2359);
        if (!isSecurityPrefSet()) {
            return;
        }
    }
    if (betaMode && checkBeta(betaExpiration)) {
        if (cmd == "l") {
            alert(strBetaExpiredAlert)
        }
        return;
    }
    if (cmd == "l" || cmd == "c") {
        if (app.settings.haveSetting(prefsSectionName, prefsName)) {
            myReg = app.settings.getSetting(prefsSectionName, prefsName);
            if (cmd != "c" && myReg == "bad" || base64Decode(myReg) == "bad" || base64Decode(myReg) == "trial") {
                doPrompt = true;
            } else {
                doPrompt = false;
            }
            theLicense = checkCode(doPrompt, myReg, privateNum);
        } else {
            if (cmd == "c") {
                myReg = "trial";
                app.settings.saveSetting(prefsSectionName, prefsName, base64Encode(myReg));
                app.preferences.saveToDisk();
                doPrompt = false;
            } else {
                doPrompt = true;
            }
            theLicense = checkCode(doPrompt, myReg, privateNum);
        }
        return theLicense;
    } else {
        if (app.settings.haveSetting(prefsSectionName, prefsName)) {
            myReg = base64Decode(app.settings.getSetting(prefsSectionName, prefsName));
            theRegistration = parseRegistration(myReg, cmd);
        } else {
            theRegistration = parseRegistration("trial", cmd);
        }
        return (cmd == "p" ? strRegistration: "") + (cmd == "v" && theRegistration.match("Trial") ? "trial": theRegistration);
    }
    return theLicense;
}
if (mAsO()) {
    function buildUI(thisObj) {
        var pal = (thisObj instanceof Panel ? thisObj: new Window("palette", "Dynamic_Comp需要汉化找我吧", [0, 0, 370, 400], {
            resizeable: true
            
        // var pal = (thisObj instanceof Panel) ? thisObj : new Window("palette", "Dynamic_Comp", undefined,{
        //     resizeable: true
        }));
        pal.center();
        if (pal == null) {
            return pal;
        }
        var button1 = "Export composition(s)";
        var button2 = "Update composition(s)";
        var button3 = "Look for Updates";
        var button4 = "Check last modification";
        var button5 = "Clear Link";
        var button6 = "User's guide";
        var button7 = " Link nested pre-comps";
        var button8 = " Incremented versions";
        var button9 = " Collect files";
        pal.add("statictext", [190, 15, 360, 35], "Options");
        pal.add("statictext", [10, 15, 160, 35], "Main functions");
        pal.col = pal.add("checkbox", [190, 55, 360, 75], button9);
        pal.col.value = false;
        pal.par = pal.add("checkbox", [190, 90, 360, 110], button7);
        pal.par.value = false;
        pal.inc = pal.add("checkbox", [190, 125, 360, 145], button8);
        pal.inc.value = false;
        pal.att = pal.add("checkbox", [190, 160, 360, 180], " Disable alert boxes");
        pal.att.value = false;
        pal.add("panel", [10, 40, 360, 40]);
        pal.add("panel", [10, 200, 360, 200]);
        pal.add("panel", [180, 10, 180, 350]);
        pal.oneBtn = pal.add("button", [10, 50, 160, 80], button1);
        pal.oneBtn.onClick = oneBtn_OnClick;
        pal.twoBtn = pal.add("button", [10, 102.5, 160, 132.5], button2);
        pal.twoBtn.onClick = twoBtn_OnClick;
        pal.threeBtn = pal.add("button", [10, 155, 160, 185], button3);
        pal.threeBtn.onClick = threeBtn_OnClick;
        pal.fourBtn = pal.add("button", [10, 210, 160, 240], button4);
        pal.fourBtn.onClick = fourBtn_OnClick;
        pal.fiveBtn = pal.add("button", [10, 260, 160, 290], button5);
        pal.fiveBtn.onClick = fiveBtn_OnClick;
        var infosTxt = "Dynamic_Comp is a script that allows you to share compositions between several projects.\n\nMain functions:\n\nTo export a composition, select it in the project panel, then hit \"Export composition\". You can now import the generated project in any other project.\n\nTo update a composition, select it in the project panel, then hit \"Update composition(s)\". You can select several compositions and update them in one click.\nUse this button to link a composition to an existing .aep project.\n\nWhen you hit the \"Look for updates\" button, the script will check if any linked composition needs to be updated.\n\nOptions:\n\nCollect files. If checked, the files used by your composition will be collected in a \"Collected_files\" folder, inside the same folder than the .aep project.\nWhen updating, the footage used by your comp will be replaced by the collected ones.\n\nLink nested pre-comps: pre-comps will be treated as footage. If the main composition is updated, pre-comps will too.\n\nIncremented versions: on export, a new incremented version will be created.\nOn update, the project with the highest increment number will be used. If the project is older than the last update, you'll receive a warning.\n\nCheck \"DISABLE ALERT BOXES\" when you're used to this script.\nIt will disable the warnings, like :\n\"your project will be saved fisrt, do you want to continue?\"\n\nWhen you hit the \"Check last modification\" button, the script will give informations about the project your composition is linked to:\n     _the location of the .aep project.\n     _the last modification of the .aep project.\n     _the last modifier of the .aep project.\n     _the last time you updated the comp.\n\nWhen you hit the \"Clear Link\" button, the script will break the link between your composition and the external .aep project.\nUse the \"Update composition(s)\" button to restore this link.";
        var alertWin = new Window("window", "'Dynamic Comp' User's guide", [0, 0, 800, 500], {
            borderless: false,
            resizeable: true
        });
        alertWin.add("statictext", [10, 10, 790, 490], mAsO("p") + "\n\n" + infosTxt, {
            multiline: true
        });
        pal.helpBtn = pal.add("button", [10, 310, 160, 340], button6);
        pal.helpBtn.onClick = function() {
            alertWin.center();
            alertWin.show();
        };
        var myBinary = "PNG\r\n\n\0\0\0\rIHDR\0\0\0\0\0\0\b\0\0\0Ã>aË\0\0\0\tpHYs\0\0\0\0\0\08\"ô@\0\0\0$zTXtCreator\0\0xsLÉOJUpL+I-RpMKKM.)\0AzÎçÍsf\0\0ZIDATxí{pÕÇ?'3y D BDÝÄ äéÅu¹ ¼.+PPR\\Å·.»7°aX,´\f/QAAGÐ\bl$<4@BBH2³ôdÈc¦§{¦g&Éö§j 3Ý}Îwú÷îÓçüÎïIëG[ÑH)ÐèÜt\x07º÷\0h -XÙÛ@9p¸\n\\.ç3ÀoÀ\r!\fÌ7\t\f-Þ¤@/`\0ð@\nÁ£\r®ê:C\x07!D¥Áõç\0_x7àáÀc@,ÿ.(¾\x07v_\0ç[Ú¢E8£þ\0<S\vª£ÀÇÀ'(Î\\EhÖ\n¥mP~åS!(÷íÀm`°\nØ%¸d=ni ¥ì¼\b¼\fô\b²_9\v¬>B\\\r¶Æ4+\x07RÆ¦,ÇhJ÷¿\v!®[LÍÂ¤Ñ(ÿ3pwåøß¿£8Âõ`\tªH)C?û©%\bü\n,>BÔKDÐ@Jd¥¡ððªâX0*¸8Zöó9´V½¿¹\rüx'ÐO\fu\0)e_àCàá@ÖÛ8¼(ø)P¢)er*J¯i|÷<\f|/¥*¥\fmü~RFËÌ@Ô×JÀ`¢ÂùÕ RÊûPºFõg=­À¿ú«¿9²?ðï¯:þp-øÁûå>#¥|¥/Ü4¾ïÄ{çÔp\fw\0)åH`+­¿G/Ü\rlu[C1ô ¥lÂ|¾÷·ç¹FhH)¶\0m*ÓÄ%·ñBFfH)>Gµ3ñ?åÀSBï}-Èg\x07Röö1¾e¢ M\bQàK!>92e0#ÉrL¼æ0H\bQâm^?H)ÃõÆ&IÀz-¼ÂÇÀ·a>ob\fÃPlá^Ý{ Á$Ôc[õ¨Û¤÷?`6úÅ@¢HÏAº~Á!ÊUÆoÄ«ô#ë½g\0Ïè<Æ$p<b#Íh¾H)ïÓúÂµ[¥@!Äe-;ë¹da¿%ÐÅVÐtptõîÃlõ·jQz\t=v{t\0G£â;é×&-(½µj;iùEÁ4~Kd\0íTQ½H)-(Ïü}\feXývw;xºÃ4~K¦\rÝâö\nàÈÄq%IËå(ð»Ì%jWÁÆo\r<bK¨9À«Æk1\tnméòàÐq\b­ÿùõë×¹qãr #ÿMý<8]»võY©_¨z¸`bu±3Àd ;;¿üå/X,,\vV«Õù·ÅbáòeM½&'Å¦Kohr\vp4þ&@I`ä°m\\µRP/´.z¡Ø¶®à9ÿk1\tMlÛ \ràHÈè±ûÐjkk)//§ªª\n»ÝNHH\báááDEEaµºkKMM\rTWW#¥Äb±85f¼+HÆH)Ôo¸7>ã=\x07¬Ñn·sæÌöïßO~~>çÎ£¢¢%/Rhh(mÚ´¡]»vtíÚ\x07x\b\v3&hUUùùù<x'NPTTDee¥ÓÃÂÂ$::III!>>Þ0cÔ×püøq¸uë6Í­ÔÔTC5 Ø¶\x07ÊÐè1PJù\n°ÂÝÑ/ÖüP^^Îg}Æ-[8{ö,B&û»+Çb±GZZééétìè]Â¥KØ¸q#;vì ¤¤DS½u[­V:t(\r¢Mïf¼±iÓ&¶oßÞ@»ºëo\v\r\r¥{÷î¤§§û¤¡ÓÿU÷¦±l&¸;RØl6>þøcrrrt=P÷bØ°a9ÈÈHMß°¬¬6mÚDUUÇíéóÆÃ A°X,º4lÜ¸Ñ¥-ÐXÃØ±cuipÃf!Äóuo·\0Ç#Âã¾|îÜ9æÎË#GÂ}¥ªª;wÇäÉéÝ»·êþûöícÁ\\ºtÉy2}åÚµk¬]»CILzLì¾}û?>.]r3ÐTx\\J)êÆêß\\º}9räH<èKn¹zõ*Ë/g×®]uÕÔÖÖ²lÙ2222øõWÿdT9}ú4YYY<yÒåö@h8uêYYY8qÂÛ\":£Øhè\0>gïúý÷ß}-B»ÝNnn.[¶liàµµµ¼ñÆ¼óÎ;Øl6¿j¨¨¨à½÷ÞãÈ#\r>¯Ó°dÉg×_»Ô §­ë;@Næ½{÷ë|¿hÑ\">øài°ÙllØ°üüüÞÿýjX¿~½SN¶®LöY\x07\"\"\"HNN¦O>téÒÈÈHl6¥¥¥rúôi**´eEûæo¥  Í÷Ùèèh|ðAzõêEll,aaaTUUQ\\\\Ì3g(,,Ôt±ÛílØ°;òÅ_£ùq-::þýûÓ³gOâââ®\\¹âµ.]ºhªÛÓÖõ §ôËäÉyægèÔ©ÛýnÝºÅÑ£GÙºu+çÎóXnnn.¹¹¹.ÛéÝ»7\f4¨¨(·û]»vï¾û;v8G>ÝQ]]ÍêÕ«Y¹r¥.\r?þ¸G\rß~û-;wîäúuõâUUU¬_¿×^{MO¿ÓÖ±@¸ÚQÆÄ5kwÝuVqØív¾þúk6nÜHuuµj¥¥¥lÝºÕí#Uûöí3gãÆÓõDPYYÉæÍÙ³gB\bÕï{üøq:äVgûöíyýõ×?~¼WvïÞí±å'`ÄZ®¢öºkV¯\bÞ}÷],X Ëø\0ôôt.\\¨zÅ\0åêä:EA.]X·n&LÐý8Iff&Ó§O÷øËêÛ·/íÛ·w¹íÞ{ïeÝºu<ÿüó^k1cG\rû÷ïçêUÍ\v£ØÜÙ\b44W¿ÕjeéÒ¥z<Ò%ñññÌ7èhõàRSS¦âkÖ¬¡W/ß6\x07\fÀôéÓUg±XHMMmòy\\\\k×®5DÃ3TÛ9v»½{÷ê)ö>¸ã\0±ÞËkÊìÙ³6ÌÜqqq\rÐ®];âãïä¤\f\r\r%;;nÝº¹=F©©©;VuÄÄÄ]µÁÐ¯¹Ãæu`Ø¿¦NjTq\0$%%1tèPûÔÉ#<b¨áÃàv»Åbáþûïw¾2eázê)zôp¿Ífã§4gï\bwÀõ\rÌ\væÍgH×gcF¡:ÐµkW,\víÚµcæÌ×Â¸qª!öN\x07\t¦ÍIÃÚÃ\x07Ð6ÊâÞ½{3`fEFFòè£î[­Vbcc?~¼Û¯ôìÙûîsß\\Ãb±UÃ\v°ÛÝNªO$Üq\0CÞGÑ¤1f$=¤>M!&&#\rO§Û\0W½:¬V+:tàÙg\rÍFqq±bÂàq ö\v5BC+;!%Å¿=ÚªÛcccý®ÁÝco¥¥¥Z\tqþ²BÏx:9¾b±XTûz÷î­ê F§º=PÔ®´7oÞÔRLá`C¯î¾ÛÿâÛ¶u86ÖÐ§YÝõ7\rÕÕÕZ©;P©å°v°iAç¨î8ú¨Oçïx\0PÆÂÝ¡±ñã·úAÈ\t¶B7àhRÝ¹³zÀÐéÓ§µã5v»]µ¿ûäÉ~Æ¸rE}ÝçóçÏ\x07DÚè£Æ±kpÇ4MêóÔúôW8Xª'·¤¤cÇü»«''¯®®ö»S§N©n×E}î8ÀE-G$''á~5íÛ·k÷£Gªn/))aÛ¶m~« //Ïã>[·êNÙkº1\r\\W\0kÖ3pà@·ÛO<É\x07´T®ÊÊJÕ+L]\x07È-[<rxËÏ?ÿì1ØSJT\rñññZºâoQÿ\nàH%¦é>jÔ(ÕíYYYZ»\"u±}ûv*+Ý?¬\\¼x»ÝNYYË/7¼þÚÚZ>ùäMû±lÙ² hÐ8ô|º.}\\ýÀãZ0aêmàØ±c¬ZµJKQ9uê»wïö¸OkÖ¬áðáÃjØµk÷÷Ï?ÿ³gÏºÝnµZéÛ·¯¢¶®ï\0on(Ý­&¸<ÀÒ¥KùòË/µç+W®°bÅ\nÕ É²²2.\\¸à|_SSÃ«¯¾Êùóç\rÑÇ§~ªë`hè×¯j¬aýâêþ¨ï\0ðsæÌ!<Ü}ÍfcöìÙlß¾]k.¹páYYY#óòò4>ÉÌÌÔ3<ê\x07xt@w\\¹r\fC4äää¨ÞZ-\v\x07»ÍÕ§­ë;ÀÀP$&&òÊ+¯¨îsûömæÎË%K´öM;±Ûí|õÕW,^¼Øc[qq±ÛÇ¢ß~ûI&±yófÝ¬¬¬dÍ5¬X±Bk×ªK4i6mòZCNNG\r\x07ô?é ÅÖ@ÓÉ¡;§5RQAZZ'7vîÜÙ«°pOÇäæærùòeÊ}ûöõ*,\\ïdÒ¼¼<;ær[½aáêïÜ¹³°ðB\bç`ðZJøñÇ9r$·oßÖt¢Ú¶m«ibÖ>aÂ\n\n\n3gæ¶;vÔ41Dë¬]=P_!ZêdÖ¬Yz&ü\"ÇÜ²\\¹æ®mÛ¶1mÚ4jkku(-«mKOOgôèÑH)yóÍ7Y¹r¥aeûò¹\x070JWXXS¦L¡_¿~ZÍe\x07âë¯+Ô Ä±ák­¥2#8;;[µQh$B\bììB°hÑ\"^zé¥Ôß\\°Z­L8Qñ¾n¼¨«H Ý³,{î9V¯^í÷x\0ÅÂ¨Q£?~|a×Þzë-æÏï÷<CQQQªóýÒ¶m[¦MÆÃëÐÝÄ¶®àS@×Òc\0C\faÛ¶m~\v\vëÔ©3gÎdøðá.ÇÜCBB5kk×®U\rôÄÄDæÍ§Ú×>zôh¿jHJJbÞ¼y$'ëË[bÛ4q\0!Dí¸îÝ»³aÃÞ~ûmî¹çohBxx8O?ý4\v.ô --;v0uêT­\"éÐ¡Ì=[Sf´´4vîÜÉ´iÓ4§µ1Z\v²¶m»\\Áí3ø°>`kNÍ/¿üâ²!C4èi&I¢Jûe7¨­ð¯ÀRok¬£5¦Óã\0®4!MÜl!Ä¿»Ú æ\0áÀ1\fÎØEÞ¼ymº¿#\"\"T\x07ËÒ ÿEYR¶Éå<¯ô$ðærq-Z ]\báöÑ^Õ°sÔö1iÖä¨´­|<h*ð#ðBuOëÊ¡=ý@\x07økÀ@!ÄÏvÔtowôJnæMðãÆâ\vàO31ø\røÃVÐÕºB|¼éÍð²ÃFñj\"òCòøÌ-à%!Äÿè=ÐëRÊ!ÀF|è.61à{¼9ØëGQ5\tQZû^|ìáB\0þ³]Hl(çü\t\r¼ÆÉìì¡ÀrÌ%çüM0ØmD.C³H)Û³ÚY¶\teÀß¥B\bõ:ðK:\v)e7à\ràç¡15no\t!fT¿æ3R&¡\\\rþPO/bÒr`ð7!zB\0\bHB)eàE`\nà>ßª\t@!°øP\bñ¿+\vhF#)e0e%ë§00Em\vçð9ðßÀ!Äí@U´VRÊÀ0`4ð$`LiËá2ÊÏ/þÏ.åfÓÌsÐåQòI ­oèùbôÝÀÆêA³pÆ8¢{ ¬pÕ¥íp7ÍTs=$ð;Ê½ü\x07¸ÊÃ@«¨Ü`ÓÜO&àìhjrHr¼¯n(¹ïï¢ðÿw(S¬o¥Àyc§¯Ë@YKHÙüjÀÁÜÅI: 8D\x07Çû»¯6(kåD ¬Â®ðZÇËòÜ]2ÂvÓñ*C¹:þ/ÊÝEÚ4/þÞôfQq°È¬\0\0\0\0IEND®B`";
        var myFile = new File("~/Desktop/xxxmyFilexxx.png");
        myFile.encoding = "BINARY";
        myFile.open("w");
        myFile.write(myBinary);
        myFile.close();
        pal.add("image", [190, 210, 350, 340], myFile);
        var progBar = pal.add("progressbar", [10, 360, 360, 390], 0, 50);
        myFile.remove();
        function fiveBtn_OnClick() {
            app.beginUndoGroup("Clear link");
            for (a = app.project.selection.length - 1; a >= 0; a--) { (app.project.selection[a]).comment = "";
            }
            app.endUndoGroup();
        }
        function checkFile(fileToCheck) {
            var modification = fileToCheck.modified;
            var valRet = true;
            if (modification == null) {
                valRet = false;
            }
            return valRet;
        }
        function autoUpdate(increment) {
            var myComps = new Array();
            var myComp = false;
            for (var z = 1; z <= app.project.numItems; z += 1) {
                if (app.project.item(z) instanceof CompItem && app.project.item(z).comment != "") {
                    myComps.push(app.project.item(z));
                }
            }
            var al = "";
            for (var y = 0; y <= myComps.length - 1; y += 1) {
                myComp = myComps[y];
                var comIndex = myComp.comment.lastIndexOf("#");
                if (myComp.comment != "") {
                    var comIndex = myComp.comment.lastIndexOf("#");
                    if (increment == false) {
                        myFile = new File(myComp.comment.substring(0, comIndex));
                    } else {
                        myFile = new File(myComp.comment.substring(0, comIndex));
                        var mySearchFolder = new Folder(myFile.parent);
                        var mySearchFiles = mySearchFolder.getFiles("*.aep");
                        if (mySearchFiles.length > 0) {
                            myOldIndex = 0;
                            for (var s = 0; s < mySearchFiles.length; s += 1) {
                                var myNewSearchName = (mySearchFiles[s]).name;
                                var myIndex = myNewSearchName.substring(myNewSearchName.length - 6, myNewSearchName.length - 4);
                                myRadix = myNewSearchName.substring(0, myNewSearchName.length - 6);
                                var myIndexValid = false;
                                try {
                                    myIndex = eval(myIndex);
                                    if (myOldIndex < myIndex) {
                                        myOldIndex = myIndex;
                                        myIndexValid = true;
                                    }
                                } catch(e) {

}
                                var myRadixValid = true;
                                for (var t = 0; t < (mySearchFiles[s]).name.length; t += 1) {
                                    myCheck1 = (mySearchFiles[s]).absoluteURI.substring(t, t + 1);
                                    myCheck2 = myComp.comment.substring(t, t + 1);
                                    if (myCheck1 != myCheck2) {
                                        myRadixValid = false;
                                        break;
                                    }
                                }
                                if (myOldIndex > 0 && myIndexValid == true && myRadixValid == true) {
                                    myFile = mySearchFiles[s];
                                }
                            }
                        }
                    }
                } else {
                    myFile = File.openDialog("Select a file for " + myName, "*.aep", false);
                }
                var modF = myFile.modified;
                if (modF == null && myComp.comment != "") {
                    var conf = confirm("Unable to find source project for comp : " + myComp.name + "\rDo you want to renew the link?");
                    if (conf == true) {
                        myNewFile = File.openDialog("Select a link for " + myComp.name);
                        if (myNewFile != null) {
                            oldComment = myComp.comment;
                            myComp.comment = myNewFile.absoluteURI + "#" + myNewFile.modified.toSource();
                            for (var child = 1; child <= app.project.numItems; child += 1) {
                                if (app.project.item(child) instanceof CompItem) {
                                    if (app.project.item(child).comment == oldComment) {
                                        app.project.item(child).comment = myComp.comment;
                                    }
                                }
                            }
                        }
                    }
                } else {
                    var modif = eval(myFile.modified.toSource());
                    var comm = eval(myComp.comment.substring(comIndex + 1, myComp.comment.length));
                    var diff = comm.valueOf() - modif.valueOf();
                    if (Math.abs(diff) > 10000) {
                        al += "Update available for comp : " + myComp.name + "\r\r";
                    }
                }
            }
            if (al == "") {
                alert("No update available");
            } else {
                alert(al);
            }
        }
        function upDateComp(attention, parenting, increment, collect) {
            var myComps = new Array();
            var myComp = false;
            var ngay = new Date();
            progBar.value++;
            if (progBar.value > 50) {
                progBar.value -= 45;
            }
            if (app.project.selection.length > 0) {
                progBar.value++;
                if (progBar.value > 50) {
                    progBar.value -= 45;
                }
                for (var z = 0; z <= app.project.selection.length - 1; z += 1) {
                    if (parenting) {
                        for (var child = 1; child <= app.project.numItems; child += 1) {
                            if (app.project.item(child) instanceof CompItem) {
                                used = app.project.item(child).usedIn;
                                for (var u = 0; u < used.length; u += 1) {
                                    if (used[u] == app.project.selection[z]) {
                                        app.project.item(child).comment = (app.project.selection[z]).comment;
                                    }
                                }
                            }
                        }
                    }
                }
                for (var z = 0; z <= app.project.selection.length - 1; z += 1) {
                    myComps.push(app.project.selection[z]);
                    if (parenting) {
                        for (var a = 1; a <= app.project.numItems; a += 1) {
                            if (app.project.item(a) instanceof CompItem && app.project.item(a).comment == (app.project.selection[z]).comment && app.project.item(a) != app.project.selection[z]) {
                                myComps.push(app.project.item(a));
                            }
                        }
                    }
                }
            } else {
                if (app.project.activeItem != null) {
                    myComps.push(app.project.activeItem);
                    if (parenting) {
                        for (var a = 1; a <= app.project.numItems; a += 1) {
                            if (app.project.item(a) instanceof CompItem && app.project.item(a).comment == (app.project.selection[z]).comment && app.project.item(a) != app.project.selection[z]) {
                                myComps.push(app.project.item(a));
                            }
                        }
                    }
                }
            }
            if (attention == false) {
                attention = confirm("Your project will be saved first\rContinue?");
            }
            if (attention == true) {
                var myActualFile = File(app.project.file.fsName);
                app.project.save(myActualFile);
            }
            for (var y = 0; y <= myComps.length - 1; y += 1) {
                progBar.value++;
                if (progBar.value > 50) {
                    progBar.value -= 45;
                }
                myComp = myComps[y];
                if (myComp != false && attention == true) {
                    var myName = myComp.name;
                    if (myComp.comment != "") {
                        var comIndex = myComp.comment.lastIndexOf("#");
                        if (increment == false) {
                            myFile = new File(myComp.comment.substring(0, comIndex));
                        } else {
                            myFile = new File(myComp.comment.substring(0, comIndex));
                            var mySearchFolder = new Folder(myFile.parent);
                            var mySearchFiles = mySearchFolder.getFiles("*.aep");
                            if (mySearchFiles.length > 0) {
                                myOldIndex = 0;
                                for (var s = 0; s < mySearchFiles.length; s += 1) {
                                    var myNewSearchName = (mySearchFiles[s]).name;
                                    var myIndex = myNewSearchName.substring(myNewSearchName.length - 6, myNewSearchName.length - 4);
                                    myRadix = myNewSearchName.substring(0, myNewSearchName.length - 6);
                                    var myIndexValid = false;
                                    try {
                                        myIndex = eval(myIndex);
                                        if (myOldIndex < myIndex) {
                                            myOldIndex = myIndex;
                                            myIndexValid = true;
                                        }
                                    } catch(e) {

}
                                    var myRadixValid = true;
                                    for (var t = 0; t < (mySearchFiles[s]).name.length; t += 1) {
                                        myCheck1 = (mySearchFiles[s]).absoluteURI.substring(t, t + 1);
                                        myCheck2 = myComp.comment.substring(t, t + 1);
                                        if (myCheck1 != myCheck2) {
                                            myRadixValid = false;
                                            break;
                                        }
                                    }
                                    if (myOldIndex > 0 && myIndexValid == true && myRadixValid == true) {
                                        myFile = mySearchFiles[s];
                                    }
                                }
                            }
                        }
                    } else {
                        myFile = File.openDialog("Select a file for " + myName, "*.aep", false);
                    }
                    if (myFile) {
                        var checkF = checkFile(myFile);
                        if (checkF == false) {
                            var conf = confirm("Unable to find source project for comp : " + myComp.name + "\rDo you want to renew the link?");
                            if (conf == true) {
                                myNewFile = File.openDialog("Select a link for " + myComp.name);
                                if (myNewFile != null) {
                                    oldComment = myComp.comment;
                                    myComp.comment = myNewFile.absoluteURI + "#" + myNewFile.modified.toSource();
                                    for (var child = 1; child <= app.project.numItems; child += 1) {
                                        if (app.project.item(child) instanceof CompItem) {
                                            if (app.project.item(child).comment == oldComment) {
                                                app.project.item(child).comment = myComp.comment;
                                            }
                                        }
                                    }
                                }
                                checkF = checkFile(myNewFile);
                                if (checkF == true) {
                                    myFile = myNewFile;
                                }
                            }
                        }
                        if (checkF == true) {
                            var z = app.project.items.addComp("-------------------------------------------------", 4, 4, 1, 1, 25);
                            for (var w = 1; w <= app.project.numItems; w += 1) {
                                if (app.project.item(w) instanceof FolderItem || app.project.item(w) == z) {

} else {
                                    z.layers.add(app.project.item(w));
                                }
                            }
                            var myIO = new ImportOptions(myFile);
                            var itemFolder = app.project.importFile(myIO);
                            itemFolder.name = "remove";
                            app.beginUndoGroup("Import " + myName);
                            var compIndex = myComp.id;
                            var newComp = false;
                            for (var a = 1; a <= app.project.numItems; a += 1) {
                                if (app.project.item(a).name == myName && app.project.item(a).id != compIndex) {
                                    newComp = app.project.item(a);
                                    break;
                                }
                            }
                            for (var d = 1; d <= myComp.numLayers; d += 1) {
                                for (var e = 1; e <= newComp.numLayers; e += 1) {
                                    if (myComp.layer(d).source) {
                                        if (newComp.layer(e).source) {
                                            if (myComp.layer(d).source.name == newComp.layer(e).source.name) {
                                                var isSolid = false;
                                                try {
                                                    var test = newComp.layer(e).mainSource.color[0];
                                                    isSolid = true;
                                                } catch(e) {

}
                                                if (isSolid == true) {
                                                    if (newComp.layer(e).mainSource.color[0] == myComp.layer(d).mainSource.color[0] && newComp.layer(e).mainSource.color[1] == myComp.layer(d).mainSource.color[1] && newComp.layer(e).mainSource.color[2] == myComp.layer(d).mainSource.color[2]) {
                                                        newComp.layer(e).replaceSource(myComp.layer(d).source, false);
                                                    }
                                                } else {
                                                    newComp.layer(e).replaceSource(myComp.layer(d).source, false);
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                            if (newComp != false && myComp.usedIn.length > 0) {
                                var comps = myComp.usedIn;
                                for (var b = 0; b <= comps.length - 1; b += 1) {
                                    for (var c = 1; c <= (comps[b]).numLayers; c += 1) {
                                        if ((comps[b]).layer(c).source == myComp) { (comps[b]).layer(c).replaceSource(newComp, false);
                                        }
                                    }
                                }
                            }
                            var par = myComp.parentFolder;
                            newComp.parentFolder = par;
                            var mySources = null;
                            for (var d = 1; d <= app.project.numItems; d += 1) {
                                if (app.project.item(d).name == ("Sources_" + myName)) {
                                    mySources = app.project.item(d);
                                    break;
                                }
                            }
                            if (mySources == null) {
                                mySources = app.project.items.addFolder("Sources_" + myName);
                            }
                            var myNewComps = new Array();
                            myNewComps.push(newComp);
                            for (var g = 0; g < myNewComps.length; g += 1) {
                                for (var e = 1; e <= (myNewComps[g]).numLayers; e += 1) {
                                    if ((myNewComps[g]).layer(e).source instanceof CompItem) {
                                        myNewComps.push((myNewComps[g]).layer(e).source);
                                    }
                                }
                            }
                            for (var f = 0; f < myNewComps.length; f += 1) {
                                try {
                                    for (var e = 1; e <= (myNewComps[f]).numLayers; e += 1) {
                                        if ((myNewComps[f]).layer(e).source) {
                                            var parFold = (myNewComps[f]).layer(e).source.parentFolder;
                                            for (var pf = 0; pf < 1; pf += 1) {
                                                if (parFold && parFold.parentFolder && parFold.parentFolder.name != "Root") {
                                                    parFold = parFold.parentFolder;
                                                    pf = -1;
                                                }
                                            }
                                            if (parFold == itemFolder) { (myNewComps[f]).layer(e).source.parentFolder = mySources;
                                            }
                                        }
                                    }
                                } catch(e) {

}
                            }
                            itemFolder.remove();
                            progBar.value++;
                            if (progBar.value > 50) {
                                progBar.value -= 45;
                            }
                            app.project.reduceProject([z]);
                            z.remove();
                            newComp.comment = myFile.absoluteURI + "#" + myFile.modified.toSource();
                            if (collect == true) {
                                for (var i = 1; i <= app.project.numItems; i += 1) {
                                    progBar.value++;
                                    if (progBar.value > 50) {
                                        progBar.value -= 45;
                                    }
                                    myItem = app.project.item(i);
                                    if (myItem instanceof FootageItem) {
                                        mySourceFile = myItem.file;
                                        if (mySourceFile != null) {
                                            try {
                                                if (myItem.name.lastIndexOf("].") != -1) {
                                                    try {
                                                        replaceCollect(myItem, true, myFile.parent.absoluteURI + "/Collected_files/" + myItem.file.name);
                                                    } catch(er) {
                                                        myItem.replaceWithSequence(File(myFile.parent.absoluteURI + "/Collected_files/" + myItem.file.name), false);
                                                    }
                                                } else {
                                                    try {
                                                        replaceCollect(myItem, false, myFile.parent.absoluteURI + "/Collected_files/" + myItem.file.name);
                                                    } catch(er) {
                                                        myItem.replace(File(myFile.parent.absoluteURI + "/Collected_files/" + myItem.file.name));
                                                    }
                                                }
                                            } catch(e) {

}
                                        }
                                    }
                                }
                                progBar.value = 50;
                            }
                            app.endUndoGroup();
                        }
                    }
                }
            }
            myComps = new Array();
            myComp = false;
            progBar.value = 0;
        }
        function exportComp(attention, parenting, increment) {
            var multipleComps = false;
            var myComp = false;
            var ngay = new Date();
            if (app.project.selection.length > 0) {
                myComp = app.project.selection[0];
                if (! (myComp instanceof CompItem)) {
                    myComp = false;
                }
            } else {
                if (app.project.activeItem != null) {
                    myComp = app.project.activeItem;
                    if (! (myComp instanceof CompItem)) {
                        myComp = false;
                    }
                }
            }
            if (app.project.selection.length > 0) {
                var multComps = new Array();
                for (mC = app.project.selection.length - 1; mC >= 0; mC--) {
                    if (app.project.selection[mC] instanceof CompItem) {
                        multComps.push(app.project.selection[mC]);
                    }
                }
                if (multComps.length > 1) {
                    var newMultComp = app.project.items.addComp("TempCollectComp", multComps[0].width, multComps[0].height, 1, multComps[0].duration, 25);
                    for (mC = multComps.length - 1; mC >= 0; mC--) {
                        newMultComp.layers.add(multComps[mC], (multComps[mC]).duration);
                    }
                    myComp = newMultComp;
                    parenting = true;
                    multipleComps = myComp.id;
                }
            }
            if (myComp != false) {
                progBar.value++;
                if (progBar.value > 50) {
                    progBar.value -= 45;
                }
                var cont = true;
                if (increment == true && myComp.comment != "") {
                    if (attention == false) {
                        attention = confirm("Your project will be saved first\rContinue?");
                    }
                    if (attention == true) {
                        var comIndex = myComp.comment.lastIndexOf("#");
                        var myOldIndex = myComp.comment.substring(comIndex - 6, comIndex - 4);
                        var myNewIndex = eval(myOldIndex) + 1;
                        var zero = "";
                        if (myNewIndex < 10) {
                            zero = "0";
                        }
                        var newComment = myComp.comment.substring(0, comIndex - 6) + zero + myNewIndex + myComp.comment.substring(comIndex - 4, myComp.comment.length);
                        myComp.comment = newComment;
                        var comIndex = myComp.comment.lastIndexOf("#");
                        var logIndex = myComp.comment.lastIndexOf(".aep");
                        myTargetFile = new File(myComp.comment.substring(0, comIndex));
                        var myTempFile = new File(myTargetFile.absoluteURI);
                        myTempFile.open("w");
                        myTempFile.write("ok");
                        myTempFile.close();
                        var myTargetFile = null;
                    } else {
                        var cont = false;
                    }
                }
                var comIndex = myComp.comment.lastIndexOf("#");
                var myFile = File(myComp.comment.substring(0, comIndex));
                var checkF = checkFile(myFile);
                if (checkF == false && myComp.comment != "") {
                    var conf = confirm("Unable to find source project for comp : " + myComp.name + "\rDo you want to renew the link?");
                    if (conf == true) {
                        myNewFile = File.openDialog("Select a link for " + myComp.name);
                        if (myNewFile != null) {
                            oldComment = myComp.comment;
                            myComp.comment = myNewFile.absoluteURI + "#" + myNewFile.modified.toSource();
                            for (var child = 1; child <= app.project.numItems; child += 1) {
                                if (app.project.item(child) instanceof CompItem) {
                                    if (app.project.item(child).comment == oldComment) {
                                        app.project.item(child).comment = myComp.comment;
                                    }
                                }
                            }
                        }
                        checkF = checkFile(myNewFile);
                        if (checkF == true) {
                            myFile = myNewFile;
                        }
                    }
                }
                if (checkF == true || myComp.comment == "" || increment == true) {
                    if (myComp.comment != "") {
                        var comIndex = myComp.comment.lastIndexOf("#");
                        var modif = eval(myFile.modified.toSource());
                        var comm = eval(myComp.comment.substring(comIndex + 1, myComp.comment.length));
                        var diff = comm.valueOf() - modif.valueOf();
                        if (diff < -3000 && increment == false) {
                            cont = confirm(myFile.displayName + " is more recent than last update,\rContinue ?");
                        }
                    }
                    if (cont == true) {
                        progBar.value++;
                        if (progBar.value > 50) {
                            progBar.value -= 45;
                        }
                        var myName = myComp.name;
                        var myTargetFile = null;
                        var myLog = null;
                        var myActualFile = File(app.project.file.fsName);
                        if (myComp.comment != "") {
                            var comIndex = myComp.comment.lastIndexOf("#");
                            var logIndex = myComp.comment.lastIndexOf(".aep");
                            myTargetFile = new File(myComp.comment.substring(0, comIndex));
                            myLog = new File(myComp.comment.substring(0, logIndex) + ".txt");
                            myLog.hidden = true;
                            myLog.open("w");
                            myLog.write(myLog.hidden);
                            myLog.close();
                            var nameLog = new Folder("~/Desktop/").parent.displayName;
                            myLog.open("w");
                            myLog.write(nameLog);
                            myLog.close();
                        } else {
                            var fileName = prompt("File name", myName + "_v01");
                            if (fileName != null) {
                                myTargetFile = Folder.selectDialog("Choose a folder for your file");
                                if (myTargetFile != null) {
                                    myTargetFile = new File(myTargetFile.absoluteURI + "/" + fileName + ".aep");
                                    myLog = new File(myTargetFile.absoluteURI + "/" + fileName + ".txt");
                                    myLog.hidden = true;
                                    myLog.open("w");
                                    myLog.write(myLog.hidden);
                                    myLog.close();
                                    var nameLog = new Folder("~/Desktop/").parent.displayName;
                                    myLog.open("w");
                                    myLog.write(nameLog);
                                    myLog.close();
                                    var myTempFile = new File(myTargetFile.absoluteURI);
                                    myTempFile.open("w");
                                    myTempFile.write("ok");
                                    myTempFile.close();
                                }
                            }
                        }
                        if (attention == false && myTargetFile != null) {
                            attention = confirm("Your project will be saved first\rContinue?");
                        }
                        if (attention == true && myTargetFile != null) {
                            myComp.comment = myTargetFile.absoluteURI + "#" + ngay.toSource();
                            if (parenting) {
                                for (var child = 1; child <= app.project.numItems; child += 1) {
                                    if (app.project.item(child) instanceof CompItem) {
                                        used = app.project.item(child).usedIn;
                                        for (var u = 0; u < used.length; u += 1) {
                                            if (used[u] == myComp) {
                                                app.project.item(child).comment = myComp.comment;
                                            }
                                        }
                                    }
                                }
                            }
                            app.project.save(myActualFile);
                            progBar.value++;
                            if (progBar.value > 50) {
                                progBar.value -= 45;
                            }
                            app.project.reduceProject([myComp]);
                            progBar.value++;
                            if (progBar.value > 50) {
                                progBar.value -= 45;
                            }
                            var mySources = null;
                            for (var d = 1; d <= app.project.numItems; d += 1) {
                                if (app.project.item(d).name == ("Sources_" + myName)) {
                                    mySources = app.project.item(d);
                                    break;
                                }
                            }
                            if (mySources != null) {
                                for (var e = 1; e <= mySources.numItems; e += 1) {
                                    mySources.item(e).parentFolder = app.project.rootFolder;
                                }
                                mySources.remove();
                            }
                            app.project.save(myTargetFile);
                            progBar.value++;
                            if (progBar.value > 50) {
                                progBar.value -= 45;
                            }
                            app.open(myActualFile);
                            progBar.value++;
                            if (progBar.value > 50) {
                                progBar.value -= 45;
                            }
                            var nameLog = new Folder("~/Desktop/").parent.displayName;
                            myLog.open("w");
                            myLog.write(nameLog);
                            myLog.close();
                        }
                    }
                }
            }
            if (multipleComps) {
                progBar.value++;
                if (progBar.value > 50) {
                    progBar.value -= 45;
                }
                for (var mc = 1; mc < app.project.numItems + 1; mc += 1) {
                    if (app.project.item(mc).id == multipleComps) {
                        app.project.item(mc).remove();
                        break;
                    }
                }
            }
            progBar.value = 0;
        }
        function replaceCollect(myItem, sequenceB, filePath) {
            try {
                progBar.value++;
                if (progBar.value > 50) {
                    progBar.value -= 45;
                }
                if (myItem instanceof FootageItem && filePath) {
                    newFile = File(filePath);
                    changeFile = File(newFile.parent.absoluteURI + "/" + myItem.name);
                    if (changeFile != newFile) {
                        var myPar = myItem.parentFolder;
                        var myIO = new ImportOptions(newFile);
                        var compB = false;
                        if (myIO.canImportAs(ImportAsType.COMP_CROPPED_LAYERS)) {
                            myIO.importAs = ImportAsType.COMP_CROPPED_LAYERS;
                            compB = true;
                        }
                        if (sequenceB) {
                            myIO.sequence = true;
                        }
                        var itemFolder = app.project.importFile(myIO);
                        itemFolder.name = "remove";
                        var removePar = null;
                        if (compB) {
                            removePar = itemFolder.layer(1).source.parentFolder;
                            var w = myItem.width;
                            var h = myItem.height;
                            var newSource = null;
                            for (var l = 1; l <= itemFolder.numLayers; l += 1) {
                                if (itemFolder.layer(l).source.name == myItem.name && h == itemFolder.layer(l).source.height && w == itemFolder.layer(l).source.width) {
                                    newSource = itemFolder.layer(l).source;
                                    break;
                                }
                            }
                            if (newSource) {
                                for (var u = 0; u < myItem.usedIn.length; u += 1) {
                                    for (var lu = 1; lu <= (myItem.usedIn[u]).numLayers; lu += 1) {
                                        if ((myItem.usedIn[u]).layer(lu).source) {
                                            if ((myItem.usedIn[u]).layer(lu).source == myItem) { (myItem.usedIn[u]).layer(lu).replaceSource(newSource, false);
                                                u = -1;
                                                break;
                                            }
                                        }
                                    }
                                }
                                newSource.parentFolder = myPar;
                                itemFolder.remove();
                                myItem.remove();
                                removePar.remove();
                            } else {
                                if (removePar) {
                                    removePar.remove();
                                }
                                if (itemFolder) {
                                    itemFolder.remove();
                                }
                                myIO.importAs = ImportAsType.COMP;
                                itemFolder = app.project.importFile(myIO);
                                itemFolder.name = "remove";
                                removePar = itemFolder.layer(1).source.parentFolder;
                                newSource = null;
                                for (var l = 1; l <= itemFolder.numLayers; l += 1) {
                                    if (itemFolder.layer(l).source.name == myItem.name && h == itemFolder.layer(l).source.height && w == itemFolder.layer(l).source.width) {
                                        newSource = itemFolder.layer(l).source;
                                        break;
                                    }
                                }
                                if (newSource) {
                                    for (var u = 0; u < myItem.usedIn.length; u += 1) {
                                        for (var lu = 1; lu <= (myItem.usedIn[u]).numLayers; lu += 1) {
                                            if ((myItem.usedIn[u]).layer(lu).source) {
                                                if ((myItem.usedIn[u]).layer(lu).source == myItem) { (myItem.usedIn[u]).layer(lu).replaceSource(newSource, false);
                                                    u = -1;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                    newSource.parentFolder = myPar;
                                    itemFolder.remove();
                                    myItem.remove();
                                    removePar.remove();
                                }
                            }
                        } else {
                            myItem.replace(newFile);
                            itemFolder.remove();
                        }
                    } else {
                        myItem.replace(newFile);
                    }
                }
            } catch(e) {

}
            progBar.value = 50;
        }
        function exportCollect(attention, parenting, increment) {
            var multipleComps = false;
            var myComp = false;
            var ngay = new Date();
            if (app.project.selection.length > 0) {
                myComp = app.project.selection[0];
                if (! (myComp instanceof CompItem)) {
                    myComp = false;
                }
            } else {
                if (app.project.activeItem != null) {
                    myComp = app.project.activeItem;
                    if (! (myComp instanceof CompItem)) {
                        myComp = false;
                    }
                }
            }
            if (app.project.selection.length > 0) {
                var multComps = new Array();
                for (mC = app.project.selection.length - 1; mC >= 0; mC--) {
                    if (app.project.selection[mC] instanceof CompItem) {
                        multComps.push(app.project.selection[mC]);
                    }
                }
                if (multComps.length > 1) {
                    var newMultComp = app.project.items.addComp("TempCollectComp", multComps[0].width, multComps[0].height, 1, multComps[0].duration, 25);
                    for (mC = multComps.length - 1; mC >= 0; mC--) {
                        newMultComp.layers.add(multComps[mC], (multComps[mC]).duration);
                    }
                    myComp = newMultComp;
                    parenting = true;
                    multipleComps = myComp.id;
                }
            }
            if (myComp != false) {
                progBar.value++;
                if (progBar.value > 50) {
                    progBar.value -= 45;
                }
                var cont = true;
                if (increment == true && myComp.comment != "") {
                    if (attention == false) {
                        attention = confirm("Your project will be saved first\rContinue?");
                    }
                    if (attention == true) {
                        var comIndex = myComp.comment.lastIndexOf("#");
                        var myOldIndex = myComp.comment.substring(comIndex - 6, comIndex - 4);
                        var myNewIndex = eval(myOldIndex) + 1;
                        var zero = "";
                        if (myNewIndex < 10) {
                            zero = "0";
                        }
                        var newComment = myComp.comment.substring(0, comIndex - 6) + zero + myNewIndex + myComp.comment.substring(comIndex - 4, myComp.comment.length);
                        myComp.comment = newComment;
                        var comIndex = myComp.comment.lastIndexOf("#");
                        var logIndex = myComp.comment.lastIndexOf(".aep");
                        myTargetFile = new File(myComp.comment.substring(0, comIndex));
                        var myTempFile = new File(myTargetFile.absoluteURI);
                        myTempFile.open("w");
                        myTempFile.write("ok");
                        myTempFile.close();
                        var myTargetFile = null;
                    } else {
                        var cont = false;
                    }
                }
                var comIndex = myComp.comment.lastIndexOf("#");
                var myFile = File(myComp.comment.substring(0, comIndex));
                var checkF = checkFile(myFile);
                if (checkF == false && myComp.comment != "") {
                    var conf = confirm("Unable to find source project for comp : " + myComp.name + "\rDo you want to renew the link?");
                    if (conf == true) {
                        myNewFile = File.openDialog("Select a link for " + myComp.name);
                        if (myNewFile != null) {
                            oldComment = myComp.comment;
                            myComp.comment = myNewFile.absoluteURI + "#" + myNewFile.modified.toSource();
                            for (var child = 1; child <= app.project.numItems; child += 1) {
                                if (app.project.item(child) instanceof CompItem) {
                                    if (app.project.item(child).comment == oldComment) {
                                        app.project.item(child).comment = myComp.comment;
                                    }
                                }
                            }
                        }
                        checkF = checkFile(myNewFile);
                        if (checkF == true) {
                            myFile = myNewFile;
                        }
                    }
                }
                if (checkF == true || myComp.comment == "" || increment == true) {
                    if (myComp.comment != "") {
                        var comIndex = myComp.comment.lastIndexOf("#");
                        var modif = eval(myFile.modified.toSource());
                        var comm = eval(myComp.comment.substring(comIndex + 1, myComp.comment.length));
                        var diff = comm.valueOf() - modif.valueOf();
                        if (diff < -3000 && increment == false) {
                            cont = confirm(myFile.displayName + " is more recent than last update,\rContinue ?");
                        }
                    }
                    if (cont == true) {
                        progBar.value++;
                        if (progBar.value > 50) {
                            progBar.value -= 45;
                        }
                        var myName = myComp.name;
                        var myTargetFile = null;
                        var myLog = null;
                        var myActualFile = File(app.project.file.fsName);
                        if (myComp.comment != "") {
                            var comIndex = myComp.comment.lastIndexOf("#");
                            var logIndex = myComp.comment.lastIndexOf(".aep");
                            myTargetFile = new File(myComp.comment.substring(0, comIndex));
                            myLog = new File(myComp.comment.substring(0, logIndex) + ".txt");
                            myLog.hidden = true;
                            myLog.open("w");
                            myLog.write(myLog.hidden);
                            myLog.close();
                            var nameLog = new Folder("~/Desktop/").parent.displayName;
                            myLog.open("w");
                            myLog.write(nameLog);
                            myLog.close();
                        } else {
                            var fileName = prompt("File name", myName + "_v01");
                            if (fileName != null) {
                                myTargetFile = Folder.selectDialog("Choose a folder for your file");
                                if (myTargetFile != null) {
                                    myTargetFile = new File(myTargetFile.absoluteURI + "/" + fileName + ".aep");
                                    myLog = new File(myTargetFile.absoluteURI + "/" + fileName + ".txt");
                                    myLog.hidden = true;
                                    myLog.open("w");
                                    myLog.write(myLog.hidden);
                                    myLog.close();
                                    var nameLog = new Folder("~/Desktop/").parent.displayName;
                                    myLog.open("w");
                                    myLog.write(nameLog);
                                    myLog.close();
                                    var myTempFile = new File(myTargetFile.absoluteURI);
                                    myTempFile.open("w");
                                    myTempFile.write("ok");
                                    myTempFile.close();
                                }
                            }
                        }
                        if (attention == false && myTargetFile != null) {
                            attention = confirm("Your project will be saved first\rContinue?");
                        }
                        if (attention == true && myTargetFile != null) {
                            myComp.comment = myTargetFile.absoluteURI + "#" + ngay.toSource();
                            if (parenting) {
                                for (var child = 1; child <= app.project.numItems; child += 1) {
                                    if (app.project.item(child) instanceof CompItem) {
                                        used = app.project.item(child).usedIn;
                                        for (var u = 0; u < used.length; u += 1) {
                                            if (used[u] == myComp) {
                                                app.project.item(child).comment = myComp.comment;
                                            }
                                        }
                                    }
                                }
                            }
                            app.project.save(myActualFile);
                            progBar.value++;
                            if (progBar.value > 50) {
                                progBar.value -= 45;
                            }
                            app.project.reduceProject([myComp]);
                            progBar.value++;
                            if (progBar.value > 50) {
                                progBar.value -= 45;
                            }
                            var paths = new Array();
                            var newFolder = Folder(myTargetFile.parent.absoluteURI + "/Collected_files/");
                            if (newFolder.exists == false) {
                                newFolder.create();
                            }
                            for (var i = 1; i <= app.project.numItems; i += 1) {
                                var myItem = app.project.item(i);
                                if (myItem instanceof FootageItem) {
                                    var mySourceFile = myItem.file;
                                    if (mySourceFile != null) {
                                        var foundSequence = false;
                                        if (myItem.name.lastIndexOf("].") != -1) {
                                            foundSequence = true;
                                        }
                                        var newPath = newFolder.absoluteURI + "/" + mySourceFile.name;
                                        if (mySourceFile.absoluteURI != newPath) {
                                            paths.push([mySourceFile.absoluteURI, newPath, foundSequence]);
                                            if (foundSequence == false) {
                                                var copy = mySourceFile.copy(newPath);
                                                if (copy) {
                                                    replaceCollect(myItem, false, newPath);
                                                }
                                            } else {
                                                var copy = null;
                                                radixName = myItem.name.substring(0, myItem.name.lastIndexOf("["));
                                                var mySeqFiles = mySourceFile.parent.getFiles();
                                                for (var t = 0; t < mySeqFiles.length; t += 1) {
                                                    copy = (mySeqFiles[t]).copy(newFolder.absoluteURI + "/" + (mySeqFiles[t]).name);
                                                }
                                                replaceCollect(myItem, true, newPath);
                                            }
                                        }
                                    }
                                }
                            }
                            var mySources = null;
                            for (var d = 1; d <= app.project.numItems; d += 1) {
                                if (app.project.item(d).name == ("Sources_" + myName)) {
                                    mySources = app.project.item(d);
                                    break;
                                }
                            }
                            if (mySources != null) {
                                for (var e = 1; e <= mySources.numItems; e += 1) {
                                    mySources.item(e).parentFolder = app.project.rootFolder;
                                }
                                mySources.remove();
                            }
                            app.project.save(myTargetFile);
                            progBar.value++;
                            if (progBar.value > 50) {
                                progBar.value -= 45;
                            }
                            app.open(myActualFile);
                            progBar.value++;
                            if (progBar.value > 50) {
                                progBar.value -= 45;
                            }
                            for (var i = 1; i <= app.project.numItems; i += 1) {
                                myItem = app.project.item(i);
                                if (myItem instanceof FootageItem) {
                                    mySourceFile = myItem.file;
                                    if (mySourceFile != null) {
                                        try {
                                            for (var p = 0; p < paths.length; p += 1) {
                                                if (mySourceFile.absoluteURI == (paths[p])[0]) {
                                                    replaceCollect(myItem, (paths[p])[2], (paths[p])[1]);
                                                }
                                            }
                                        } catch(e) {

}
                                    }
                                }
                            }
                            var nameLog = new Folder("~/Desktop/").parent.displayName;
                            myLog.open("w");
                            myLog.write(nameLog);
                            myLog.close();
                        }
                    }
                }
            }
            if (multipleComps) {
                progBar.value++;
                if (progBar.value > 50) {
                    progBar.value -= 45;
                }
                for (var mc = 1; mc < app.project.numItems + 1; mc += 1) {
                    if (app.project.item(mc).id == multipleComps) {
                        app.project.item(mc).remove();
                        break;
                    }
                }
            }
            progBar.value = 0;
        }
        function oneBtn_OnClick() {
            if (pal.col.value == false) {
                exportComp(pal.att.value, pal.par.value, pal.inc.value);
            } else {
                exportCollect(pal.att.value, pal.par.value, pal.inc.value);
            }
        }
        function twoBtn_OnClick() {
            upDateComp(pal.att.value, pal.par.value, pal.inc.value, pal.col.value);
        }
        function threeBtn_OnClick() {
            autoUpdate();
        }
        function fourBtn_OnClick() {
            var myComps = new Array();
            var myComp = false;
            var ngay = new Date();
            if (app.project.selection.length > 0) {
                for (var z = 0; z <= app.project.selection.length - 1; z += 1) {
                    if (app.project.selection[z] instanceof CompItem && (app.project.selection[z]).comment != "") {
                        myComps.push(app.project.selection[z]);
                    }
                }
            }
            for (var y = 0; y <= myComps.length - 1; y += 1) {
                myComp = myComps[y];
                var comIndex = myComp.comment.lastIndexOf("#");
                var logIndex = myComp.comment.lastIndexOf(".aep");
                var myFile = File(myComp.comment.substring(0, comIndex));
                var myLog = File(myComp.comment.substring(0, logIndex) + ".txt");
                myLog.open("r");
                var changer = null;
                changer = myLog.read();
                myLog.close();
                var modF = myFile.modified;
                var modL = myLog.modified;
                if (modF == null) {
                    var conf = confirm("Unable to find source project for comp : " + myComp.name + "\rDo you want to renew the link?");
                    if (conf == true) {
                        myNewFile = File.openDialog("Select a link for " + myComp.name);
                        if (myNewFile != null) {
                            oldComment = myComp.comment;
                            myComp.comment = myNewFile.absoluteURI + "#" + myNewFile.modified.toSource();
                            for (var child = 1; child <= app.project.numItems; child += 1) {
                                if (app.project.item(child) instanceof CompItem) {
                                    if (app.project.item(child).comment == oldComment) {
                                        app.project.item(child).comment = myComp.comment;
                                    }
                                }
                            }
                        }
                    }
                } else if (modL == null) {
                    if (changer == null) {
                        changer = "Unknown...";
                    }
                    alert("Project :\r" + myFile.absoluteURI + "\r\rLast modification :\r" + eval(myFile.modified.toSource()).toLocaleString() + "\rby :  " + changer + "\r\rLast update :\r" + eval(myComp.comment.substring(comIndex + 1, myComp.comment.length)).toLocaleString(), "Update for comp " + myComp.name);
                } else {
                    alert("Project :\r" + myFile.absoluteURI + "\r\rLast modification :\r" + eval(myFile.modified.toSource()).toLocaleString() + "\rby :  " + changer + "\r\rLast update :\r" + eval(myComp.comment.substring(comIndex + 1, myComp.comment.length)).toLocaleString(), "Update for comp " + myComp.name);
                }
            }
        }
        return pal;
    }
    var userinterface = buildUI(this);
    if (userinterface != null && userinterface instanceof Window) {
        userinterface.show();
    }
}