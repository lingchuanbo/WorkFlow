/*SPUpdateWipItemsInRenderQueue()Scans render queue for WIP items and updates themWritten by Daniel Harkness, Spinifex Group, 2013*/{	function SPUpdateWipItemsInRenderQueue()	{		var scriptName = "Update Wip Items in Render Queue ";				// Check a project is open		if (!app.project)		{			alert ("A project must be open to use this script.", scriptName);			return;		}			var myQueue = app.project.renderQueue;			if (myQueue.numItems == 0)		{			alert ("There is nothing in the render queue.", scriptName);			return;		}		// Get Today		var today = new Date();		var dd = today.getDate();		var mm = today.getMonth()+1; //January is 0!		var yyyy = today.getFullYear();		if(dd<10){dd='0'+dd} if(mm<10){mm='0'+mm} today = yyyy+mm+dd;				for (var i=1, len=myQueue.numItems; i<=len; i++){			var RQItem = myQueue.item(i);			if (RQItem.status == RQItemStatus.QUEUED){				var outputModule = RQItem.outputModules[1];								var outputModulePath = outputModule.file.fsName.replace("\\","/").replace("//","/");				var outputModuleArray = outputModulePath.split("/");				outputModuleArray.splice(0,1);								var didFindWIPFolder = false;				while (outputModuleArray.length > 0 )				{					var lastArrayItem = outputModuleArray.pop();					// Check for spinifex fodler structure and break when found					if (lastArrayItem== "WIP")					{						didFindWIPFolder = true;						outputModuleArray.push("WIP");						break;					}				}												if (didFindWIPFolder){					// Make dated wip folder					var wipFolderPath = "/" + outputModuleArray.join("/") + "/" + today;															// Check if we're rendering QTs					var outputPath = outputModule.file.fsName;					var outputFileName = RQItem.outputModule(1).file.name;					var index = outputPath.lastIndexOf( "\\" );					var outputFile = outputPath.substring( index + 1, outputPath.length );					index = outputFile.lastIndexOf( "." );					var outputPrefix = outputFile.substring( 0, index );					outputExt = outputFile.substring( index + 1, outputFile.length );					index = outputFileName.lastIndexOf( "." );					outputFileName = outputFileName.substring( 0,index);					// Continue on movie types					if (IsMovieFormat( outputExt ))					{						//Create Wip folder						var wipFolder = new Folder (wipFolderPath);						wipFolder.create();						//Setnew file path						var newFilePath = wipFolderPath + "/" + outputFileName.substring(0, outputFileName.length-11) + today + "_01." + outputExt;						//Check if file exists						var j=1;						while (outputModule.file.exists)						{							// remover version number and add an new one							outputPrefix = outputPrefix.substring (0,outputPrefix.length-2);							var jString = j;							if (jString<10) {jString='0'+jString;}							outputPrefix = outputPrefix+jString;							var renderFile = new File (outputPrefix + "." + outputExt);							outputModule.file = renderFile;							j++;						}					}									}			}		}				app.endUndoGroup();			}	function IsMovieFormat( extension )	{		var movieFormat = false;		if( extension != null )		{			// These formats are all the ones included in DFusion, as well			// as all the formats in AE that don't contain [#####].			if( extension == "vdr" || extension == "wav" || extension == "dvs" ||				extension == "fb"  || extension == "omf" || extension == "omfi"||				extension == "stm" || extension == "tar" || extension == "vpr" ||				extension == "gif" || extension == "img" || extension == "flc" ||				extension == "flm" || extension == "mp3" || extension == "mov" ||				extension == "rm"  || extension == "avi" || extension == "wmv" ||				extension == "mpg" || extension == "m4a" || extension == "mpeg" || 				extension == "flv" )			{				movieFormat = true;			}		}		return movieFormat;	}	SPUpdateWipItemsInRenderQueue();}